{"ast":null,"code":"import client from \"../client\";\nimport { API_ENDPOINTS } from \"src/utils/constants\";\nconst CatalogService = {\n  getFullCatalog: async () => {\n    try {\n      const response = await client.get(`${API_ENDPOINTS.CATALOG}`);\n      const data = await response.json();\n      if (typeof data === \"string\") throw new Error(data);\n      return data;\n    } catch (err) {\n      throw new Error(err.message);\n    }\n  },\n  getCatalog: async _ref => {\n    let {\n      id,\n      name\n    } = _ref;\n    try {\n      const response = await client.get(`${API_ENDPOINTS.CATALOG}?${name ? `name=${name}` : \"\"}`);\n      const data = await response.json();\n      if (typeof data === \"string\") throw new Error(data);\n      return data;\n    } catch (err) {\n      throw new Error(err.message);\n    }\n  }\n};\nexport default CatalogService;","map":{"version":3,"names":["client","API_ENDPOINTS","CatalogService","getFullCatalog","response","get","CATALOG","data","json","Error","err","message","getCatalog","_ref","id","name"],"sources":["D:/Programs/VS Code projects/Веб-прога/project_marina/client/src/utils/api/services/Catalog.ts"],"sourcesContent":["import { addItem } from \"src/utils/local-storage\";\r\nimport client from \"../client\";\r\nimport { API_ENDPOINTS } from \"src/utils/constants\";\r\nimport { IBackAuth } from \"src/utils/interfaces/back-auth.interface\";\r\nimport { IUser } from \"src/utils/interfaces/user.interface\";\r\nimport { ICatalog } from \"src/utils/interfaces/catalog.interface\";\r\n\r\nconst CatalogService = {\r\n  getFullCatalog: async (): Promise<ICatalog[]> => {\r\n    try {\r\n      const response = await client.get(`${API_ENDPOINTS.CATALOG}`);\r\n      const data: ICatalog[] | string = await response.json();\r\n\r\n      if (typeof data === \"string\") throw new Error(data);\r\n\r\n      return data;\r\n    } catch (err: any) {\r\n      throw new Error(err.message);\r\n    }\r\n  },\r\n  getCatalog: async ({\r\n    id,\r\n    name,\r\n  }: {\r\n    id?: number;\r\n    name?: string;\r\n  }): Promise<ICatalog[]> => {\r\n    try {\r\n      const response = await client.get(\r\n        `${API_ENDPOINTS.CATALOG}?${name ? `name=${name}` : \"\"}`\r\n      );\r\n      const data: ICatalog[] | string = await response.json();\r\n\r\n      if (typeof data === \"string\") throw new Error(data);\r\n\r\n      return data;\r\n    } catch (err: any) {\r\n      throw new Error(err.message);\r\n    }\r\n  },\r\n};\r\n\r\nexport default CatalogService;\r\n"],"mappings":"AACA,OAAOA,MAAM,MAAM,WAAW;AAC9B,SAASC,aAAa,QAAQ,qBAAqB;AAKnD,MAAMC,cAAc,GAAG;EACrBC,cAAc,EAAE,MAAAA,CAAA,KAAiC;IAC/C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,MAAM,CAACK,GAAG,CAAE,GAAEJ,aAAa,CAACK,OAAQ,EAAC,CAAC;MAC7D,MAAMC,IAAyB,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAEvD,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE,MAAM,IAAIE,KAAK,CAACF,IAAI,CAAC;MAEnD,OAAOA,IAAI;IACb,CAAC,CAAC,OAAOG,GAAQ,EAAE;MACjB,MAAM,IAAID,KAAK,CAACC,GAAG,CAACC,OAAO,CAAC;IAC9B;EACF,CAAC;EACDC,UAAU,EAAE,MAAAC,IAAA,IAMe;IAAA,IANR;MACjBC,EAAE;MACFC;IAIF,CAAC,GAAAF,IAAA;IACC,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMJ,MAAM,CAACK,GAAG,CAC9B,GAAEJ,aAAa,CAACK,OAAQ,IAAGS,IAAI,GAAI,QAAOA,IAAK,EAAC,GAAG,EAAG,EACzD,CAAC;MACD,MAAMR,IAAyB,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAEvD,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE,MAAM,IAAIE,KAAK,CAACF,IAAI,CAAC;MAEnD,OAAOA,IAAI;IACb,CAAC,CAAC,OAAOG,GAAQ,EAAE;MACjB,MAAM,IAAID,KAAK,CAACC,GAAG,CAACC,OAAO,CAAC;IAC9B;EACF;AACF,CAAC;AAED,eAAeT,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}