{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\VS Code projects\\\\\\u0412\\u0435\\u0431-\\u043F\\u0440\\u043E\\u0433\\u0430\\\\hospitals-on-react\\\\client\\\\src\\\\pages\\\\PersonalCabinet\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { Container, Form, InputErrorBox, Wrap } from \"./styled\";\nimport { AvatarImg, Button, ContentContainer, ErrorMessage, Input, Title } from \"src/commonStyles\";\nimport { useForm } from \"react-hook-form\";\nimport { useSelector } from \"react-redux\";\nimport { getItem } from \"src/utils/local-storage\";\nimport { redirect } from \"react-router-dom\";\nimport { APP_ROUTES } from \"src/utils/constants\";\nimport store from \"src/store\";\nimport { setUser } from \"src/store/actions\";\nimport UsersService from \"src/utils/api/services/Users\";\nimport jwt from \"jwt-decode\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PersonalCabinet() {\n  _s();\n  var _errors$firstName, _errors$lastName, _errors$sex, _errors$birthday, _errors$login, _errors$email, _errors$password, _errors$passwordConfi;\n  const user = useSelector(store => store.auth.user);\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm();\n  const onSubmit = async data => {\n    if (!user) return;\n    const newUser = {\n      ...user\n    };\n    const {\n      firstName,\n      lastName,\n      birthday: dob,\n      sex,\n      email,\n      password,\n      passwordConfirm\n    } = data;\n    console.log(`<${password}>`);\n    if (password !== passwordConfirm) {\n      reset();\n      return;\n    }\n    if (firstName) {\n      newUser.firstName = firstName;\n    }\n    if (lastName) {\n      newUser.lastName = lastName;\n    }\n    if (dob) {\n      newUser.dob = dob;\n    }\n    if (sex) {\n      newUser.sex = sex;\n    }\n    if (email) {\n      newUser.email = email;\n    }\n    if (password) {\n      console.log(1);\n      newUser.password = password;\n    }\n    await UsersService.updateUser(newUser);\n    dispatch(setUser(newUser));\n    reset();\n  };\n  return /*#__PURE__*/_jsxDEV(Wrap, {\n    children: /*#__PURE__*/_jsxDEV(ContentContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Personal information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(InputErrorBox, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              ...register(\"firstName\", {\n                required: {\n                  value: true,\n                  message: \"Enter name\"\n                },\n                pattern: {\n                  value: /^[A-Za-z]+$/,\n                  message: \"Only letters\"\n                },\n                maxLength: {\n                  value: 50,\n                  message: \"Max 50 signs\"\n                }\n              }),\n              id: \"firstName\",\n              autoComplete: \"off\",\n              defaultValue: (user === null || user === void 0 ? void 0 : user.firstName) || \"\",\n              $width: \"500px\",\n              placeholder: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              $dark: true,\n              children: (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputErrorBox, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              ...register(\"lastName\", {\n                required: {\n                  value: true,\n                  message: \"Enter surname\"\n                },\n                pattern: {\n                  value: /^[A-Za-z]+$/,\n                  message: \"Only letters\"\n                },\n                maxLength: {\n                  value: 50,\n                  message: \"Max 50 signs\"\n                }\n              }),\n              id: \"lastName\",\n              autoComplete: \"off\",\n              defaultValue: (user === null || user === void 0 ? void 0 : user.lastName) || \"\",\n              $width: \"500px\",\n              placeholder: \"Surname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              $dark: true,\n              children: (_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputErrorBox, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              ...register(\"sex\", {\n                required: {\n                  value: true,\n                  message: \"Enter sex\"\n                },\n                pattern: {\n                  value: /^[A-Za-z]+$/,\n                  message: \"Only letters\"\n                },\n                maxLength: {\n                  value: 50,\n                  message: \"Max 50 signs\"\n                }\n              }),\n              id: \"sex\",\n              $width: \"500px\",\n              autoComplete: \"off\",\n              defaultValue: (user === null || user === void 0 ? void 0 : user.sex) || \"\",\n              placeholder: \"Sex\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              $dark: true,\n              children: (_errors$sex = errors.sex) === null || _errors$sex === void 0 ? void 0 : _errors$sex.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputErrorBox, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              ...register(\"birthday\", {\n                required: {\n                  value: true,\n                  message: \"Enter birthday\"\n                }\n              }),\n              id: \"birthday\",\n              autoComplete: \"off\",\n              defaultValue: (user === null || user === void 0 ? void 0 : user.dob) || \"\",\n              $width: \"500px\",\n              placeholder: \"Birthday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              $dark: true,\n              children: (_errors$birthday = errors.birthday) === null || _errors$birthday === void 0 ? void 0 : _errors$birthday.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(AvatarImg, {\n            $backgroundImg: \"https://storage.yandexcloud.net/yandexpro/storage/images/originals/qZEALznNzzFc0pO7igFzH1qNsrhvp2pOpvNjVzcv.jpg\",\n            $margin_bottom: \"20px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            $light: true,\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(InputErrorBox, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              ...register(\"login\", {\n                pattern: {\n                  value: /^[A-Za-z]+$/,\n                  message: \"Only letters and numbers\"\n                },\n                maxLength: {\n                  value: 50,\n                  message: \"Max 50 signs\"\n                }\n              }),\n              id: \"login\",\n              autoComplete: \"off\",\n              value: (user === null || user === void 0 ? void 0 : user.login) || \"\",\n              disabled: true,\n              readOnly: true,\n              $disabled: true,\n              $width: \"500px\",\n              placeholder: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              $dark: true,\n              children: (_errors$login = errors.login) === null || _errors$login === void 0 ? void 0 : _errors$login.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputErrorBox, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              ...register(\"email\", {\n                required: {\n                  value: true,\n                  message: \"Enter email\"\n                },\n                pattern: {\n                  value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\n                  message: \"Format: xxx@yyy.zzz\"\n                }\n              }),\n              id: \"email\",\n              autoComplete: \"off\",\n              defaultValue: (user === null || user === void 0 ? void 0 : user.email) || \"\",\n              $width: \"500px\",\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              $dark: true,\n              children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputErrorBox, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              ...register(\"password\", {\n                pattern: {\n                  value: /^[A-Za-z0-9]+$/,\n                  message: \"Only letters and numbers\"\n                },\n                minLength: {\n                  value: 4,\n                  message: \"Min 4 signs\"\n                },\n                maxLength: {\n                  value: 50,\n                  message: \"Max 50 signs\"\n                },\n                required: {\n                  value: true,\n                  message: \"Enter new password\"\n                }\n              }),\n              id: \"password\",\n              autoComplete: \"off\",\n              defaultValue: \"\",\n              $width: \"500px\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              $dark: true,\n              children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputErrorBox, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              ...register(\"passwordConfirm\", {\n                pattern: {\n                  value: /^[A-Za-z0-9]+$/,\n                  message: \"Only letters and numbers\"\n                },\n                minLength: {\n                  value: 4,\n                  message: \"Min 4 signs\"\n                },\n                maxLength: {\n                  value: 50,\n                  message: \"Max 50 signs\"\n                },\n                required: {\n                  value: true,\n                  message: \"Confirm new password\"\n                }\n              }),\n              id: \"passwordConfirm\",\n              autoComplete: \"off\",\n              defaultValue: \"\",\n              $width: \"500px\",\n              placeholder: \"Confirm password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              $dark: true,\n              children: (_errors$passwordConfi = errors.passwordConfirm) === null || _errors$passwordConfi === void 0 ? void 0 : _errors$passwordConfi.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(PersonalCabinet, \"Iz04eaFlKqfBPOeIpk441DrSBVM=\", false, function () {\n  return [useSelector, useDispatch, useForm];\n});\n_c = PersonalCabinet;\nexport const personalCabinetLoader = async () => {\n  const token = getItem(\"token\");\n  if (!token) return redirect(APP_ROUTES.LOGIN);\n  const payload = jwt(token);\n  let [user] = await Promise.all([UsersService.getUser(+payload.sub)]);\n  if (!user.id) return null;\n  store.dispatch(setUser(user));\n  return user;\n};\nvar _c;\n$RefreshReg$(_c, \"PersonalCabinet\");","map":{"version":3,"names":["Container","Form","InputErrorBox","Wrap","AvatarImg","Button","ContentContainer","ErrorMessage","Input","Title","useForm","useSelector","getItem","redirect","APP_ROUTES","store","setUser","UsersService","jwt","useDispatch","jsxDEV","_jsxDEV","PersonalCabinet","_s","_errors$firstName","_errors$lastName","_errors$sex","_errors$birthday","_errors$login","_errors$email","_errors$password","_errors$passwordConfi","user","auth","dispatch","register","handleSubmit","formState","errors","reset","onSubmit","data","newUser","firstName","lastName","birthday","dob","sex","email","password","passwordConfirm","console","log","updateUser","children","fileName","_jsxFileName","lineNumber","columnNumber","required","value","message","pattern","maxLength","id","autoComplete","defaultValue","$width","placeholder","$dark","$backgroundImg","$margin_bottom","$light","type","login","disabled","readOnly","$disabled","minLength","_c","personalCabinetLoader","token","LOGIN","payload","Promise","all","getUser","sub","$RefreshReg$"],"sources":["D:/Programs/VS Code projects/Веб-прога/hospitals-on-react/client/src/pages/PersonalCabinet/index.tsx"],"sourcesContent":["import { Container, Form, InputErrorBox, Wrap } from \"./styled\";\r\nimport {\r\n  AvatarImg,\r\n  Button,\r\n  ContentContainer,\r\n  ErrorMessage,\r\n  Input,\r\n  Title,\r\n} from \"src/commonStyles\";\r\nimport { SubmitHandler, useForm } from \"react-hook-form\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStore } from \"src/store/interfaces/store.interface\";\r\nimport { getItem } from \"src/utils/local-storage\";\r\nimport { redirect } from \"react-router-dom\";\r\nimport { APP_ROUTES } from \"src/utils/constants\";\r\nimport { JWTPayload } from \"src/utils/interfaces/jwt-payload.interface\";\r\nimport store from \"src/store\";\r\nimport { setUser } from \"src/store/actions\";\r\nimport UsersService from \"src/utils/api/services/Users\";\r\nimport jwt from \"jwt-decode\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\ninterface IFormInput {\r\n  firstName: string;\r\n  lastName: string;\r\n  birthday: string;\r\n  sex: string;\r\n  login: string;\r\n  email: string;\r\n  password: string;\r\n  passwordConfirm: string;\r\n}\r\n\r\nexport default function PersonalCabinet() {\r\n  const user = useSelector((store: IStore) => store.auth.user);\r\n  const dispatch = useDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm<IFormInput>();\r\n\r\n  const onSubmit: SubmitHandler<IFormInput> = async (data) => {\r\n    if (!user) return;\r\n\r\n    const newUser = { ...user };\r\n\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      birthday: dob,\r\n      sex,\r\n      email,\r\n      password,\r\n      passwordConfirm,\r\n    } = data;\r\n\r\n    console.log(`<${password}>`);\r\n\r\n    if (password !== passwordConfirm) {\r\n      reset();\r\n      return;\r\n    }\r\n\r\n    if (firstName) {\r\n      newUser.firstName = firstName;\r\n    }\r\n    if (lastName) {\r\n      newUser.lastName = lastName;\r\n    }\r\n    if (dob) {\r\n      newUser.dob = dob;\r\n    }\r\n    if (sex) {\r\n      newUser.sex = sex;\r\n    }\r\n    if (email) {\r\n      newUser.email = email;\r\n    }\r\n    if (password) {\r\n      console.log(1);\r\n\r\n      newUser.password = password;\r\n    }\r\n\r\n    await UsersService.updateUser(newUser);\r\n    dispatch(setUser(newUser));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <Wrap>\r\n      <ContentContainer>\r\n        <Title>Personal information</Title>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Container>\r\n            <InputErrorBox>\r\n              <Input\r\n                {...register(\"firstName\", {\r\n                  required: { value: true, message: \"Enter name\" },\r\n                  pattern: {\r\n                    value: /^[A-Za-z]+$/,\r\n                    message: \"Only letters\",\r\n                  },\r\n                  maxLength: { value: 50, message: \"Max 50 signs\" },\r\n                })}\r\n                id=\"firstName\"\r\n                autoComplete=\"off\"\r\n                defaultValue={user?.firstName || \"\"}\r\n                $width=\"500px\"\r\n                placeholder=\"Name\"\r\n              />\r\n              <ErrorMessage $dark>{errors.firstName?.message}</ErrorMessage>\r\n            </InputErrorBox>\r\n            <InputErrorBox>\r\n              <Input\r\n                {...register(\"lastName\", {\r\n                  required: { value: true, message: \"Enter surname\" },\r\n                  pattern: {\r\n                    value: /^[A-Za-z]+$/,\r\n                    message: \"Only letters\",\r\n                  },\r\n                  maxLength: { value: 50, message: \"Max 50 signs\" },\r\n                })}\r\n                id=\"lastName\"\r\n                autoComplete=\"off\"\r\n                defaultValue={user?.lastName || \"\"}\r\n                $width=\"500px\"\r\n                placeholder=\"Surname\"\r\n              />\r\n              <ErrorMessage $dark>{errors.lastName?.message}</ErrorMessage>\r\n            </InputErrorBox>\r\n            <InputErrorBox>\r\n              <Input\r\n                {...register(\"sex\", {\r\n                  required: { value: true, message: \"Enter sex\" },\r\n                  pattern: {\r\n                    value: /^[A-Za-z]+$/,\r\n                    message: \"Only letters\",\r\n                  },\r\n                  maxLength: { value: 50, message: \"Max 50 signs\" },\r\n                })}\r\n                id=\"sex\"\r\n                $width=\"500px\"\r\n                autoComplete=\"off\"\r\n                defaultValue={user?.sex || \"\"}\r\n                placeholder=\"Sex\"\r\n              />\r\n              <ErrorMessage $dark>{errors.sex?.message}</ErrorMessage>\r\n            </InputErrorBox>\r\n            <InputErrorBox>\r\n              <Input\r\n                {...register(\"birthday\", {\r\n                  required: { value: true, message: \"Enter birthday\" },\r\n                })}\r\n                id=\"birthday\"\r\n                autoComplete=\"off\"\r\n                defaultValue={user?.dob || \"\"}\r\n                $width=\"500px\"\r\n                placeholder=\"Birthday\"\r\n              />\r\n              <ErrorMessage $dark>{errors.birthday?.message}</ErrorMessage>\r\n            </InputErrorBox>\r\n          </Container>\r\n\r\n          <Container>\r\n            <AvatarImg\r\n              $backgroundImg=\"https://storage.yandexcloud.net/yandexpro/storage/images/originals/qZEALznNzzFc0pO7igFzH1qNsrhvp2pOpvNjVzcv.jpg\"\r\n              $margin_bottom=\"20px\"\r\n            />\r\n            {/* <Button $light disabled $width=\"300px\">\r\n              Change password\r\n            </Button> */}\r\n            <Button $light type=\"submit\">\r\n              Save\r\n            </Button>\r\n          </Container>\r\n\r\n          <Container>\r\n            <InputErrorBox>\r\n              <Input\r\n                {...register(\"login\", {\r\n                  pattern: {\r\n                    value: /^[A-Za-z]+$/,\r\n                    message: \"Only letters and numbers\",\r\n                  },\r\n                  maxLength: { value: 50, message: \"Max 50 signs\" },\r\n                })}\r\n                id=\"login\"\r\n                autoComplete=\"off\"\r\n                value={user?.login || \"\"}\r\n                disabled={true}\r\n                readOnly={true}\r\n                $disabled={true}\r\n                $width=\"500px\"\r\n                placeholder=\"Login\"\r\n              />\r\n              <ErrorMessage $dark>{errors.login?.message}</ErrorMessage>\r\n            </InputErrorBox>\r\n            <InputErrorBox>\r\n              <Input\r\n                {...register(\"email\", {\r\n                  required: { value: true, message: \"Enter email\" },\r\n                  pattern: {\r\n                    value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\r\n                    message: \"Format: xxx@yyy.zzz\",\r\n                  },\r\n                })}\r\n                id=\"email\"\r\n                autoComplete=\"off\"\r\n                defaultValue={user?.email || \"\"}\r\n                $width=\"500px\"\r\n                placeholder=\"Email\"\r\n              />\r\n              <ErrorMessage $dark>{errors.email?.message}</ErrorMessage>\r\n            </InputErrorBox>\r\n            <InputErrorBox>\r\n              <Input\r\n                {...register(\"password\", {\r\n                  pattern: {\r\n                    value: /^[A-Za-z0-9]+$/,\r\n                    message: \"Only letters and numbers\",\r\n                  },\r\n                  minLength: { value: 4, message: \"Min 4 signs\" },\r\n                  maxLength: { value: 50, message: \"Max 50 signs\" },\r\n                  required: { value: true, message: \"Enter new password\" },\r\n                })}\r\n                id=\"password\"\r\n                autoComplete=\"off\"\r\n                defaultValue={\"\"}\r\n                $width=\"500px\"\r\n                placeholder=\"Password\"\r\n              />\r\n              <ErrorMessage $dark>{errors.password?.message}</ErrorMessage>\r\n            </InputErrorBox>\r\n            <InputErrorBox>\r\n              <Input\r\n                {...register(\"passwordConfirm\", {\r\n                  pattern: {\r\n                    value: /^[A-Za-z0-9]+$/,\r\n                    message: \"Only letters and numbers\",\r\n                  },\r\n                  minLength: { value: 4, message: \"Min 4 signs\" },\r\n                  maxLength: { value: 50, message: \"Max 50 signs\" },\r\n                  required: {\r\n                    value: true,\r\n                    message: \"Confirm new password\",\r\n                  },\r\n                })}\r\n                id=\"passwordConfirm\"\r\n                autoComplete=\"off\"\r\n                defaultValue={\"\"}\r\n                $width=\"500px\"\r\n                placeholder=\"Confirm password\"\r\n              />\r\n              <ErrorMessage $dark>\r\n                {errors.passwordConfirm?.message}\r\n              </ErrorMessage>\r\n            </InputErrorBox>\r\n          </Container>\r\n        </Form>\r\n      </ContentContainer>\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nexport const personalCabinetLoader = async () => {\r\n  const token = getItem(\"token\");\r\n  if (!token) return redirect(APP_ROUTES.LOGIN);\r\n\r\n  const payload: JWTPayload = jwt(token);\r\n  let [user] = await Promise.all([UsersService.getUser(+payload.sub)]);\r\n\r\n  if (!user.id) return null;\r\n\r\n  store.dispatch(setUser(user));\r\n\r\n  return user;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}