{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\VS Code projects\\\\\\u0412\\u0435\\u0431-\\u043F\\u0440\\u043E\\u0433\\u0430\\\\hospitals-on-react\\\\client\\\\src\\\\pages\\\\Companies\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { Container, InfoContainer, Wrap } from \"./styled\";\nimport { AvatarImg, Button, Text, Title } from \"src/commonStyles\";\nimport DoctorCard from \"src/pages/Companies/CompanyCard/CompanyCard\";\nimport { Link, redirect, useParams } from \"react-router-dom\";\nimport CatalogService from \"src/utils/api/services/Catalog\";\nimport { getItem } from \"src/utils/local-storage\";\nimport { APP_ROUTES } from \"src/utils/constants\";\nimport jwt from \"jwt-decode\";\nimport UsersService from \"src/utils/api/services/Users\";\nimport store from \"src/store\";\nimport { setActivatedCatalog, setCompanies, setUser } from \"src/store/actions\";\nimport CompaniesService from \"src/utils/api/services/Companies\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Companies() {\n  _s();\n  const {\n    name\n  } = useParams();\n  const hospitals = useSelector(store => store.companies.data);\n  const activatedHospital = useSelector(store => store.catalog.activatedCatalog);\n  const cards = hospitals.map(card => /*#__PURE__*/_jsxDEV(Link, {\n    to: `${APP_ROUTES.CATALOG}/${name}/${card.id}`,\n    style: {\n      textDecoration: \"none\",\n      color: \"#000\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DoctorCard, {\n      imgUrl: card.imgUrl,\n      fullName: card.fullName,\n      specialization: card.specialization\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, card.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Wrap, {\n    children: [/*#__PURE__*/_jsxDEV(InfoContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Hospital information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AvatarImg, {\n        $backgroundImg: (activatedHospital === null || activatedHospital === void 0 ? void 0 : activatedHospital.imgUrl) || \"\",\n        $margin_bottom: \"20px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: activatedHospital === null || activatedHospital === void 0 ? void 0 : activatedHospital.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: activatedHospital === null || activatedHospital === void 0 ? void 0 : activatedHospital.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: activatedHospital === null || activatedHospital === void 0 ? void 0 : activatedHospital.workTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: activatedHospital === null || activatedHospital === void 0 ? void 0 : activatedHospital.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: activatedHospital === null || activatedHospital === void 0 ? void 0 : activatedHospital.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        $light: true,\n        $white: true,\n        children: \"Check reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), cards.length === 0 && /*#__PURE__*/_jsxDEV(Container, {\n      children: \"\\u041D\\u0435\\u0442 \\u0432\\u0440\\u0430\\u0447\\u0435\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Companies, \"1Jt/CEtWovvOel6c2Ujute5v7cM=\", false, function () {\n  return [useParams, useSelector, useSelector];\n});\n_c = Companies;\nexport const companiesLoader = async _ref => {\n  let {\n    params\n  } = _ref;\n  const token = getItem(\"token\");\n  if (!token) return redirect(APP_ROUTES.LOGIN);\n  const payload = jwt(token);\n  let [user, catalog] = await Promise.all([UsersService.getUser(+payload.sub), CatalogService.getCatalog({\n    name: params.name.split(\"-\").join(\" \")\n  })]);\n  if (!user.id) return null;\n  if (catalog.length === 0) return redirect(APP_ROUTES.CATALOG);\n  const companies = await CompaniesService.getCompanies({\n    hospitalId: catalog[0].id\n  });\n  store.dispatch(setUser(user));\n  store.dispatch(setActivatedCatalog(catalog[0]));\n  store.dispatch(setCompanies(companies));\n  return user;\n};\nvar _c;\n$RefreshReg$(_c, \"Companies\");","map":{"version":3,"names":["Container","InfoContainer","Wrap","AvatarImg","Button","Text","Title","DoctorCard","Link","redirect","useParams","CatalogService","getItem","APP_ROUTES","jwt","UsersService","store","setActivatedCatalog","setCompanies","setUser","CompaniesService","useSelector","jsxDEV","_jsxDEV","Companies","_s","name","hospitals","companies","data","activatedHospital","catalog","activatedCatalog","cards","map","card","to","CATALOG","id","style","textDecoration","color","children","imgUrl","fullName","specialization","fileName","_jsxFileName","lineNumber","columnNumber","$backgroundImg","$margin_bottom","address","workTime","phone","email","$light","$white","length","_c","companiesLoader","_ref","params","token","LOGIN","payload","user","Promise","all","getUser","sub","getCatalog","split","join","getCompanies","hospitalId","dispatch","$RefreshReg$"],"sources":["D:/Programs/VS Code projects/Веб-прога/hospitals-on-react/client/src/pages/Companies/index.tsx"],"sourcesContent":["import { Container, InfoContainer, Wrap } from \"./styled\";\r\nimport { AvatarImg, Button, Text, Title } from \"src/commonStyles\";\r\nimport DoctorCard from \"src/pages/Companies/CompanyCard/CompanyCard\";\r\nimport { Link, redirect, useParams } from \"react-router-dom\";\r\nimport CatalogService from \"src/utils/api/services/Catalog\";\r\nimport { getItem } from \"src/utils/local-storage\";\r\nimport { APP_ROUTES } from \"src/utils/constants\";\r\nimport { JWTPayload } from \"src/utils/interfaces/jwt-payload.interface\";\r\nimport jwt from \"jwt-decode\";\r\nimport UsersService from \"src/utils/api/services/Users\";\r\nimport store from \"src/store\";\r\nimport { setActivatedCatalog, setCompanies, setUser } from \"src/store/actions\";\r\nimport CompaniesService from \"src/utils/api/services/Companies\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStore } from \"src/store/interfaces/store.interface\";\r\n\r\nexport default function Companies() {\r\n  const { name } = useParams();\r\n  const hospitals = useSelector((store: IStore) => store.companies.data);\r\n  const activatedHospital = useSelector(\r\n    (store: IStore) => store.catalog.activatedCatalog\r\n  );\r\n\r\n  const cards = hospitals.map((card) => (\r\n    <Link\r\n      to={`${APP_ROUTES.CATALOG}/${name}/${card.id}`}\r\n      key={card.id}\r\n      style={{ textDecoration: \"none\", color: \"#000\" }}\r\n    >\r\n      <DoctorCard\r\n        key={card.id}\r\n        imgUrl={card.imgUrl}\r\n        fullName={card.fullName}\r\n        specialization={card.specialization}\r\n      />\r\n    </Link>\r\n  ));\r\n\r\n  return (\r\n    <Wrap>\r\n      <InfoContainer>\r\n        <Title>Hospital information</Title>\r\n        <AvatarImg\r\n          $backgroundImg={activatedHospital?.imgUrl || \"\"}\r\n          $margin_bottom=\"20px\"\r\n        />\r\n        <Text>{activatedHospital?.name}</Text>\r\n        <Text>{activatedHospital?.address}</Text>\r\n        <Text>{activatedHospital?.workTime}</Text>\r\n        <Text>{activatedHospital?.phone}</Text>\r\n        <Text>{activatedHospital?.email}</Text>\r\n        <Button $light $white>Check reviews</Button>\r\n      </InfoContainer>\r\n      <Container>{cards}</Container>\r\n      {cards.length === 0 && <Container>Нет врачей</Container>}\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nexport const companiesLoader = async ({ params }: any) => {\r\n  const token = getItem(\"token\");\r\n  if (!token) return redirect(APP_ROUTES.LOGIN);\r\n\r\n  const payload: JWTPayload = jwt(token);\r\n  let [user, catalog] = await Promise.all([\r\n    UsersService.getUser(+payload.sub),\r\n    CatalogService.getCatalog({ name: params.name.split(\"-\").join(\" \") }),\r\n  ]);\r\n  if (!user.id) return null;\r\n\r\n  if (catalog.length === 0) return redirect(APP_ROUTES.CATALOG);\r\n  const companies = await CompaniesService.getCompanies({\r\n    hospitalId: catalog[0].id,\r\n  });\r\n\r\n  store.dispatch(setUser(user));\r\n  store.dispatch(setActivatedCatalog(catalog[0]));\r\n  store.dispatch(setCompanies(companies));\r\n\r\n  return user;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}