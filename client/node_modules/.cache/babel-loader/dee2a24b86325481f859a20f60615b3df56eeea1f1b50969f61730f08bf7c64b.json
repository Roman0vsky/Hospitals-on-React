{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\VS Code projects\\\\\\u0412\\u0435\\u0431-\\u043F\\u0440\\u043E\\u0433\\u0430\\\\hospitals-on-react\\\\client\\\\src\\\\pages\\\\Home\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { Title } from \"src/commonStyles\";\nimport { Container, Content, Wrap } from \"./styled\";\nimport { useSelector } from \"react-redux\";\nimport { redirect } from \"react-router-dom\";\nimport store from \"src/store\";\nimport { setCatalog, setUser } from \"src/store/actions\";\nimport UsersService from \"src/utils/api/services/Users\";\nimport { getItem } from \"src/utils/local-storage\";\nimport jwt from \"jwt-decode\";\nimport { APP_ROUTES } from \"src/utils/constants\";\nimport CatalogService from \"src/utils/api/services/Catalog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const hospitals = useSelector(store => store.hospital.activatedHospital);\n\n  // const cards = hospitals.map((card) => (\n  //   <CatalogCard key={card.id} hospitalCard={card} />\n  // ));\n\n  return /*#__PURE__*/_jsxDEV(Wrap, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Hospitals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"obeEv2kl0w3cYu/762Sk/JkvKSs=\", false, function () {\n  return [useSelector];\n});\n_c = Home;\nexport const dashboardLoader = async () => {\n  const token = getItem(\"token\");\n  if (!token) return redirect(APP_ROUTES.LOGIN);\n  const payload = jwt(token);\n  let [user, hospitalsCatalog] = await Promise.all([UsersService.getUser(+payload.sub), CatalogService.getFullCatalog()]);\n  if (!user.id) return null;\n  store.dispatch(setUser(user));\n  store.dispatch(setCatalog(hospitalsCatalog));\n  return user;\n};\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Title","Container","Content","Wrap","useSelector","redirect","store","setCatalog","setUser","UsersService","getItem","jwt","APP_ROUTES","CatalogService","jsxDEV","_jsxDEV","Home","_s","hospitals","hospital","activatedHospital","children","fileName","_jsxFileName","lineNumber","columnNumber","cards","_c","dashboardLoader","token","LOGIN","payload","user","hospitalsCatalog","Promise","all","getUser","sub","getFullCatalog","id","dispatch","$RefreshReg$"],"sources":["D:/Programs/VS Code projects/Веб-прога/hospitals-on-react/client/src/pages/Home/index.tsx"],"sourcesContent":["import { ContentContainer, Title } from \"src/commonStyles\";\r\nimport { Container, Content, Wrap } from \"./styled\";\r\nimport CatalogCard from \"./CatalogCard/CatalogCard\";\r\nimport { IStore } from \"src/store/interfaces/store.interface\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { redirect } from \"react-router-dom\";\r\nimport store from \"src/store\";\r\nimport { setCatalog, setUser } from \"src/store/actions\";\r\nimport UsersService from \"src/utils/api/services/Users\";\r\nimport { JWTPayload } from \"src/utils/interfaces/jwt-payload.interface\";\r\nimport { getItem } from \"src/utils/local-storage\";\r\nimport jwt from \"jwt-decode\";\r\nimport { APP_ROUTES } from \"src/utils/constants\";\r\nimport CatalogService from \"src/utils/api/services/Catalog\";\r\n\r\nexport default function Home() {\r\n  const hospitals = useSelector((store: IStore) => store.hospital.activatedHospital);\r\n\r\n  // const cards = hospitals.map((card) => (\r\n  //   <CatalogCard key={card.id} hospitalCard={card} />\r\n  // ));\r\n\r\n  return (\r\n    <Wrap>\r\n      <Content>\r\n        <Title>Hospitals</Title>\r\n        <Container>{cards}</Container>\r\n      </Content>\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nexport const dashboardLoader = async () => {\r\n  const token = getItem(\"token\");\r\n  if (!token) return redirect(APP_ROUTES.LOGIN);\r\n\r\n  const payload: JWTPayload = jwt(token);\r\n  let [user, hospitalsCatalog] = await Promise.all([\r\n    UsersService.getUser(+payload.sub),\r\n    CatalogService.getFullCatalog(),\r\n  ]);\r\n\r\n  if (!user.id) return null;\r\n\r\n  store.dispatch(setUser(user));\r\n  store.dispatch(setCatalog(hospitalsCatalog));\r\n\r\n  return user;\r\n};\r\n"],"mappings":";;AAAA,SAA2BA,KAAK,QAAQ,kBAAkB;AAC1D,SAASC,SAAS,EAAEC,OAAO,EAAEC,IAAI,QAAQ,UAAU;AAGnD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,KAAK,MAAM,WAAW;AAC7B,SAASC,UAAU,EAAEC,OAAO,QAAQ,mBAAmB;AACvD,OAAOC,YAAY,MAAM,8BAA8B;AAEvD,SAASC,OAAO,QAAQ,yBAAyB;AACjD,OAAOC,GAAG,MAAM,YAAY;AAC5B,SAASC,UAAU,QAAQ,qBAAqB;AAChD,OAAOC,cAAc,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAMC,SAAS,GAAGd,WAAW,CAAEE,KAAa,IAAKA,KAAK,CAACa,QAAQ,CAACC,iBAAiB,CAAC;;EAElF;EACA;EACA;;EAEA,oBACEL,OAAA,CAACZ,IAAI;IAAAkB,QAAA,eACHN,OAAA,CAACb,OAAO;MAAAmB,QAAA,gBACNN,OAAA,CAACf,KAAK;QAAAqB,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxBV,OAAA,CAACd,SAAS;QAAAoB,QAAA,EAAEK;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEX;AAACR,EAAA,CAfuBD,IAAI;EAAA,QACRZ,WAAW;AAAA;AAAAuB,EAAA,GADPX,IAAI;AAiB5B,OAAO,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,MAAMC,KAAK,GAAGnB,OAAO,CAAC,OAAO,CAAC;EAC9B,IAAI,CAACmB,KAAK,EAAE,OAAOxB,QAAQ,CAACO,UAAU,CAACkB,KAAK,CAAC;EAE7C,MAAMC,OAAmB,GAAGpB,GAAG,CAACkB,KAAK,CAAC;EACtC,IAAI,CAACG,IAAI,EAAEC,gBAAgB,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC/C1B,YAAY,CAAC2B,OAAO,CAAC,CAACL,OAAO,CAACM,GAAG,CAAC,EAClCxB,cAAc,CAACyB,cAAc,CAAC,CAAC,CAChC,CAAC;EAEF,IAAI,CAACN,IAAI,CAACO,EAAE,EAAE,OAAO,IAAI;EAEzBjC,KAAK,CAACkC,QAAQ,CAAChC,OAAO,CAACwB,IAAI,CAAC,CAAC;EAC7B1B,KAAK,CAACkC,QAAQ,CAACjC,UAAU,CAAC0B,gBAAgB,CAAC,CAAC;EAE5C,OAAOD,IAAI;AACb,CAAC;AAAC,IAAAL,EAAA;AAAAc,YAAA,CAAAd,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}