{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\VS Code projects\\\\\\u0412\\u0435\\u0431-\\u043F\\u0440\\u043E\\u0433\\u0430\\\\hospitals-on-react\\\\client\\\\src\\\\pages\\\\Company\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { Wrap } from \"./styled\";\nimport { redirect } from \"react-router-dom\";\nimport { getItem } from \"src/utils/local-storage\";\nimport { APP_ROUTES } from \"src/utils/constants\";\nimport UsersService from \"src/utils/api/services/Users\";\nimport jwt from \"jwt-decode\";\nimport store from \"src/store\";\nimport { setActivatedCompany, setUser } from \"src/store/actions\";\nimport CompaniesService from \"src/utils/api/services/Companies\";\nimport styled from \"styled-components\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewsList = [{\n  id: 1,\n  text: \"Все понравилось. И персонал, и месторождение, и печеньки с кофе, и чистота в помещениях. Молодцы. Уходить не хотелось\",\n  score: 5,\n  user: {\n    id: -1,\n    name: \"Анна Коляго\",\n    imgUrl: \"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NXx8dXNlcnxlbnwwfHwwfHx8MA%3D%3D&w=1000&q=80\"\n  }\n}, {\n  id: 2,\n  text: \"Персонал хамло!\",\n  score: 2,\n  user: {\n    id: -1,\n    name: \"Наталья Хамлова\",\n    imgUrl: \"https://oir.mobi/uploads/posts/2020-01/1579144434_1-1.jpg\"\n  }\n}, {\n  id: 3,\n  text: \"Очень крутая компания! Поддержка суперская, молниеносная, спасибо большое ребятам за такой сервис и высшую культуру обслуживания клиентов! Так держать! Всем советуем)\",\n  score: 4,\n  user: {\n    id: 1,\n    name: \"Top Gangster\",\n    imgUrl: \"https://eduenglishpassport.sru.ac.th/assets/images/users/1.jpg\"\n  }\n}];\nexport default function Company() {\n  _s();\n  /*   const user = useSelector((store: IStore) => store.auth.user);\r\n    const company = useSelector(\r\n      (store: IStore) => store.companies.activatedCompany\r\n    );\r\n    const ReviewsScore = company?.reviewsScore || 4;\r\n    const [reviews, setReviews] = useState<IReview[]>(ReviewsList);\r\n    const [reviewsScore, setReviewsScore] = useState<number>(ReviewsScore);\r\n  \r\n    const reviewsItems = reviews.map((review) => (\r\n      <Review key={review.id} data={review} />\r\n    ));\r\n   */\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm();\n  const onSubmit = data => {\n    setReviews(prevState => {\n      if (!user) return prevState;\n      const newState = [...prevState];\n      newState.push({\n        id: prevState[prevState.length - 1].id + 1,\n        text: `${data.review}`,\n        score: 5,\n        user: {\n          id: user.id,\n          name: user.firstName + \" \" + user.lastName,\n          imgUrl: \"https://images.unsplash.com/photo-1633332755192-727a05c4013d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8dXNlcnxlbnwwfHwwfHx8MA%3D%3D&w=1000&q=80\"\n        }\n      });\n      reset({\n        review: \"\"\n      });\n      return newState;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Wrap, {\n    children: \"    \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(Company, \"QfJE0T6HTX62U8fQO3zBweX6bCg=\", false, function () {\n  return [useForm];\n});\n_c = Company;\nconst ReviewsScoreContainer = styled.div`\n  display: flex;\n  column-gap: 0.5rem;\n  align-items: center;\n  justify-content: center;\n  margin: 1.5rem 0;\n`;\nexport const companyLoader = async _ref => {\n  let {\n    params\n  } = _ref;\n  const token = getItem(\"token\");\n  if (!token) return redirect(APP_ROUTES.LOGIN);\n  const payload = jwt(token);\n  let [user, company] = await Promise.all([UsersService.getUser(+payload.sub), CompaniesService.getCompany({\n    id: params.id\n  })]);\n  if (!user.id) return null;\n  store.dispatch(setUser(user));\n  store.dispatch(setActivatedCompany(company));\n  return user;\n};\nvar _c;\n$RefreshReg$(_c, \"Company\");","map":{"version":3,"names":["Wrap","redirect","getItem","APP_ROUTES","UsersService","jwt","store","setActivatedCompany","setUser","CompaniesService","styled","useForm","jsxDEV","_jsxDEV","ReviewsList","id","text","score","user","name","imgUrl","Company","_s","register","handleSubmit","formState","errors","reset","onSubmit","data","setReviews","prevState","newState","push","length","review","firstName","lastName","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ReviewsScoreContainer","div","companyLoader","_ref","params","token","LOGIN","payload","company","Promise","all","getUser","sub","getCompany","dispatch","$RefreshReg$"],"sources":["D:/Programs/VS Code projects/Веб-прога/hospitals-on-react/client/src/pages/Company/index.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Img,\r\n  Reviews,\r\n  Text,\r\n  TextArea,\r\n  TextAreaBox,\r\n  Wrap,\r\n} from \"./styled\";\r\nimport { Wrap as Wrapp } from \"./Review/styled\";\r\nimport Review from \"./Review/Review\";\r\nimport {\r\n  Button,\r\n  Hr,\r\n  Title,\r\n  StarsContainer,\r\n  StarWrapper,\r\n  ContentContainer,\r\n  ErrorMessage,\r\n} from \"src/commonStyles\";\r\nimport { redirect } from \"react-router-dom\";\r\nimport { getItem } from \"src/utils/local-storage\";\r\nimport { APP_ROUTES } from \"src/utils/constants\";\r\nimport UsersService from \"src/utils/api/services/Users\";\r\nimport { JWTPayload } from \"src/utils/interfaces/jwt-payload.interface\";\r\nimport jwt from \"jwt-decode\";\r\nimport store from \"src/store\";\r\nimport { setActivatedCompany, setUser } from \"src/store/actions\";\r\nimport { Companies } from \"../../assets/index\";\r\nimport CompaniesService from \"src/utils/api/services/Companies\";\r\nimport { IStore } from \"src/store/interfaces/store.interface\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { IReview } from \"src/utils/interfaces/review.interface\";\r\nimport { SubmitHandler, useForm } from \"react-hook-form\";\r\n\r\ninterface IFormInput {\r\n  review: string;\r\n}\r\n\r\nconst ReviewsList: IReview[] = [\r\n  {\r\n    id: 1,\r\n    text: \"Все понравилось. И персонал, и месторождение, и печеньки с кофе, и чистота в помещениях. Молодцы. Уходить не хотелось\",\r\n    score: 5,\r\n    user: {\r\n      id: -1,\r\n      name: \"Анна Коляго\",\r\n      imgUrl:\r\n        \"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NXx8dXNlcnxlbnwwfHwwfHx8MA%3D%3D&w=1000&q=80\",\r\n    },\r\n  },\r\n  {\r\n    id: 2,\r\n    text: \"Персонал хамло!\",\r\n    score: 2,\r\n    user: {\r\n      id: -1,\r\n      name: \"Наталья Хамлова\",\r\n      imgUrl: \"https://oir.mobi/uploads/posts/2020-01/1579144434_1-1.jpg\",\r\n    },\r\n  },\r\n  {\r\n    id: 3,\r\n    text: \"Очень крутая компания! Поддержка суперская, молниеносная, спасибо большое ребятам за такой сервис и высшую культуру обслуживания клиентов! Так держать! Всем советуем)\",\r\n    score: 4,\r\n    user: {\r\n      id: 1,\r\n      name: \"Top Gangster\",\r\n      imgUrl: \"https://eduenglishpassport.sru.ac.th/assets/images/users/1.jpg\",\r\n    },\r\n  },\r\n];\r\n\r\nexport default function Company() {\r\n/*   const user = useSelector((store: IStore) => store.auth.user);\r\n  const company = useSelector(\r\n    (store: IStore) => store.companies.activatedCompany\r\n  );\r\n  const ReviewsScore = company?.reviewsScore || 4;\r\n  const [reviews, setReviews] = useState<IReview[]>(ReviewsList);\r\n  const [reviewsScore, setReviewsScore] = useState<number>(ReviewsScore);\r\n\r\n  const reviewsItems = reviews.map((review) => (\r\n    <Review key={review.id} data={review} />\r\n  ));\r\n */\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm<IFormInput>();\r\n\r\n  const onSubmit: SubmitHandler<IFormInput> = (data) => {\r\n    setReviews((prevState) => {\r\n      if (!user) return prevState;\r\n\r\n      const newState = [...prevState];\r\n      newState.push({\r\n        id: prevState[prevState.length - 1].id + 1,\r\n        text: `${data.review}`,\r\n        score: 5,\r\n        user: {\r\n          id: user.id,\r\n          name: user.firstName + \" \" + user.lastName,\r\n          imgUrl:\r\n            \"https://images.unsplash.com/photo-1633332755192-727a05c4013d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8dXNlcnxlbnwwfHwwfHx8MA%3D%3D&w=1000&q=80\",\r\n        },\r\n      });\r\n      reset({ review: \"\" });\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrap>\r\n{/*       <ContentContainer>\r\n        <Title>{company?.name}</Title>\r\n        <Hr />\r\n        <Img $backgroundImg={company?.imgUrl || Companies.CompanyImg} />\r\n        <ReviewsScoreContainer>\r\n          <span>Рейтинг:</span>\r\n          <StarsContainer>\r\n            {Array(5)\r\n              .fill(null)\r\n              .map((_, index) => index + 1)\r\n              .map((starNum, index) => {\r\n                return (\r\n                  <StarWrapper key={starNum} $isActive={index < reviewsScore}>\r\n                    <Companies.StarRate />\r\n                  </StarWrapper>\r\n                );\r\n              })}\r\n          </StarsContainer>\r\n        </ReviewsScoreContainer>\r\n        <Text>{company?.description}</Text>\r\n        <Text>{company?.address}</Text>\r\n        <Reviews>Отзывы</Reviews>\r\n        <Container>\r\n          {reviewsItems}\r\n          <Wrapp>\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n              <TextAreaBox>\r\n                <TextArea\r\n                  {...register(\"review\", {\r\n                    required: { value: true, message: \"Заполните поле\" },\r\n                  })}\r\n                  placeholder=\"Enter комментарий\"\r\n                />\r\n                <ErrorMessage>{errors.review?.message}</ErrorMessage>\r\n              </TextAreaBox>\r\n              <Button type=\"submit\">Отправить</Button>\r\n            </Form>\r\n          </Wrapp>\r\n        </Container>\r\n      </ContentContainer>\r\n */}    </Wrap>\r\n  );\r\n}\r\n\r\nconst ReviewsScoreContainer = styled.div`\r\n  display: flex;\r\n  column-gap: 0.5rem;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 1.5rem 0;\r\n`;\r\n\r\nexport const companyLoader = async ({ params }: any) => {\r\n  const token = getItem(\"token\");\r\n  if (!token) return redirect(APP_ROUTES.LOGIN);\r\n\r\n  const payload: JWTPayload = jwt(token);\r\n  let [user, company] = await Promise.all([\r\n    UsersService.getUser(+payload.sub),\r\n    CompaniesService.getCompany({ id: params.id }),\r\n  ]);\r\n  if (!user.id) return null;\r\n\r\n  store.dispatch(setUser(user));\r\n  store.dispatch(setActivatedCompany(company));\r\n\r\n  return user;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}