{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\VS Code projects\\\\\\u0412\\u0435\\u0431-\\u043F\\u0440\\u043E\\u0433\\u0430\\\\hospitals-on-react\\\\client\\\\src\\\\pages\\\\Home\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { Title } from \"src/commonStyles\";\nimport { Container, Content, Wrap } from \"./styled\";\nimport CatalogCard from \"./HospitalCard/HospitalCard\";\nimport { useSelector } from \"react-redux\";\nimport { redirect } from \"react-router-dom\";\nimport store from \"src/store\";\nimport { setCatalog, setUser } from \"src/store/actions\";\nimport UsersService from \"src/utils/api/services/Users\";\nimport { getItem } from \"src/utils/local-storage\";\nimport jwt from \"jwt-decode\";\nimport { APP_ROUTES } from \"src/utils/constants\";\nimport CatalogService from \"src/utils/api/services/Catalog\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [hospitals, setHospitals] = React.useState(useSelector(store => store.hospitalsCatalog.data));\n  const cards = hospitals.map(card => /*#__PURE__*/_jsxDEV(CatalogCard, {\n    hospitalCard: card\n  }, card.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Wrap, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Hospitals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"QWvv1n+0tNuZBaFXxLPpC+j8MKk=\", false, function () {\n  return [useSelector];\n});\n_c = Home;\nexport const dashboardLoader = async () => {\n  const token = getItem(\"token\");\n  if (!token) return redirect(APP_ROUTES.LOGIN);\n  const payload = jwt(token);\n  let [user, hospitalsCatalog] = await Promise.all([UsersService.getUser(+payload.sub), CatalogService.getFullCatalog()]);\n  if (!user.id) return null;\n  store.dispatch(setUser(user));\n  store.dispatch(setCatalog(hospitalsCatalog));\n  return user;\n};\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Title","Container","Content","Wrap","CatalogCard","useSelector","redirect","store","setCatalog","setUser","UsersService","getItem","jwt","APP_ROUTES","CatalogService","React","jsxDEV","_jsxDEV","Home","_s","hospitals","setHospitals","useState","hospitalsCatalog","data","cards","map","card","hospitalCard","id","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","dashboardLoader","token","LOGIN","payload","user","Promise","all","getUser","sub","getFullCatalog","dispatch","$RefreshReg$"],"sources":["D:/Programs/VS Code projects/Веб-прога/hospitals-on-react/client/src/pages/Home/index.tsx"],"sourcesContent":["import { ContentContainer, Title } from \"src/commonStyles\";\r\nimport { Container, Content, Wrap } from \"./styled\";\r\nimport CatalogCard from \"./HospitalCard/HospitalCard\";\r\nimport { IStore } from \"src/store/interfaces/store.interface\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { redirect } from \"react-router-dom\";\r\nimport store from \"src/store\";\r\nimport { setCatalog, setUser } from \"src/store/actions\";\r\nimport UsersService from \"src/utils/api/services/Users\";\r\nimport { JWTPayload } from \"src/utils/interfaces/jwt-payload.interface\";\r\nimport { getItem } from \"src/utils/local-storage\";\r\nimport jwt from \"jwt-decode\";\r\nimport { APP_ROUTES } from \"src/utils/constants\";\r\nimport CatalogService from \"src/utils/api/services/Catalog\";\r\nimport React from \"react\";\r\n\r\nexport default function Home() {\r\n  const [hospitals, setHospitals] = React.useState(\r\n    useSelector((store: IStore) => store.hospitalsCatalog.data)\r\n  );\r\n\r\n  const cards = hospitals.map((card) => (\r\n    <CatalogCard key={card.id} hospitalCard={card} />\r\n  ));\r\n\r\n  return (\r\n    <Wrap>\r\n      <Content>\r\n        <Title>Hospitals</Title>\r\n        <Container>{cards}</Container>\r\n      </Content>\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nexport const dashboardLoader = async () => {\r\n  const token = getItem(\"token\");\r\n  if (!token) return redirect(APP_ROUTES.LOGIN);\r\n\r\n  const payload: JWTPayload = jwt(token);\r\n  let [user, hospitalsCatalog] = await Promise.all([\r\n    UsersService.getUser(+payload.sub),\r\n    CatalogService.getFullCatalog(),\r\n  ]);\r\n\r\n  if (!user.id) return null;\r\n\r\n  store.dispatch(setUser(user));\r\n  store.dispatch(setCatalog(hospitalsCatalog));\r\n\r\n  return user;\r\n};\r\n"],"mappings":";;AAAA,SAA2BA,KAAK,QAAQ,kBAAkB;AAC1D,SAASC,SAAS,EAAEC,OAAO,EAAEC,IAAI,QAAQ,UAAU;AACnD,OAAOC,WAAW,MAAM,6BAA6B;AAErD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,KAAK,MAAM,WAAW;AAC7B,SAASC,UAAU,EAAEC,OAAO,QAAQ,mBAAmB;AACvD,OAAOC,YAAY,MAAM,8BAA8B;AAEvD,SAASC,OAAO,QAAQ,yBAAyB;AACjD,OAAOC,GAAG,MAAM,YAAY;AAC5B,SAASC,UAAU,QAAQ,qBAAqB;AAChD,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,KAAK,CAACO,QAAQ,CAC9CjB,WAAW,CAAEE,KAAa,IAAKA,KAAK,CAACgB,gBAAgB,CAACC,IAAI,CAC5D,CAAC;EAED,MAAMC,KAAK,GAAGL,SAAS,CAACM,GAAG,CAAEC,IAAI,iBAC/BV,OAAA,CAACb,WAAW;IAAewB,YAAY,EAAED;EAAK,GAA5BA,IAAI,CAACE,EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CACjD,CAAC;EAEF,oBACEhB,OAAA,CAACd,IAAI;IAAA+B,QAAA,eACHjB,OAAA,CAACf,OAAO;MAAAgC,QAAA,gBACNjB,OAAA,CAACjB,KAAK;QAAAkC,QAAA,EAAC;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxBhB,OAAA,CAAChB,SAAS;QAAAiC,QAAA,EAAET;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEX;AAACd,EAAA,CAjBuBD,IAAI;EAAA,QAExBb,WAAW;AAAA;AAAA8B,EAAA,GAFSjB,IAAI;AAmB5B,OAAO,MAAMkB,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,MAAMC,KAAK,GAAG1B,OAAO,CAAC,OAAO,CAAC;EAC9B,IAAI,CAAC0B,KAAK,EAAE,OAAO/B,QAAQ,CAACO,UAAU,CAACyB,KAAK,CAAC;EAE7C,MAAMC,OAAmB,GAAG3B,GAAG,CAACyB,KAAK,CAAC;EACtC,IAAI,CAACG,IAAI,EAAEjB,gBAAgB,CAAC,GAAG,MAAMkB,OAAO,CAACC,GAAG,CAAC,CAC/ChC,YAAY,CAACiC,OAAO,CAAC,CAACJ,OAAO,CAACK,GAAG,CAAC,EAClC9B,cAAc,CAAC+B,cAAc,CAAC,CAAC,CAChC,CAAC;EAEF,IAAI,CAACL,IAAI,CAACX,EAAE,EAAE,OAAO,IAAI;EAEzBtB,KAAK,CAACuC,QAAQ,CAACrC,OAAO,CAAC+B,IAAI,CAAC,CAAC;EAC7BjC,KAAK,CAACuC,QAAQ,CAACtC,UAAU,CAACe,gBAAgB,CAAC,CAAC;EAE5C,OAAOiB,IAAI;AACb,CAAC;AAAC,IAAAL,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}