{"ast":null,"code":"import { getItem } from \"../local-storage\";\nconst client = {\n  get: async url => {\n    const jwtToken = getItem(\"token\");\n    let options;\n    if (jwtToken) {\n      options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n    } else {\n      options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${jwtToken}`\n        }\n      };\n    }\n    const res = await fetch(url, options);\n    return res;\n  },\n  post: async (url, body) => {\n    const res = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n    return res;\n  }\n};\nexport default client;","map":{"version":3,"names":["getItem","client","get","url","jwtToken","options","method","headers","Authorization","res","fetch","post","body","JSON","stringify"],"sources":["D:/Programs/VS Code projects/Веб-прога/project_marina/client/src/utils/api/client.ts"],"sourcesContent":["import { getItem } from \"../local-storage\";\r\n\r\nconst client = {\r\n  get: async (url: string) => {\r\n    const jwtToken = getItem(\"token\");\r\n\r\n    let options: any;\r\n    if (jwtToken) {\r\n      options = {\r\n        method: \"GET\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      };\r\n    } else {\r\n      options = {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${jwtToken}`,\r\n        },\r\n      };\r\n    }\r\n\r\n    const res = await fetch(url, options);\r\n\r\n    return res;\r\n  },\r\n  post: async (url: string, body: any) => {\r\n    const res = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(body),\r\n    });\r\n\r\n    return res;\r\n  },\r\n};\r\n\r\nexport default client;\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,kBAAkB;AAE1C,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,MAAOC,GAAW,IAAK;IAC1B,MAAMC,QAAQ,GAAGJ,OAAO,CAAC,OAAO,CAAC;IAEjC,IAAIK,OAAY;IAChB,IAAID,QAAQ,EAAE;MACZC,OAAO,GAAG;QACRC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAChD,CAAC;IACH,CAAC,MAAM;MACLF,OAAO,GAAG;QACRC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAG,UAASJ,QAAS;QACpC;MACF,CAAC;IACH;IAEA,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAACP,GAAG,EAAEE,OAAO,CAAC;IAErC,OAAOI,GAAG;EACZ,CAAC;EACDE,IAAI,EAAE,MAAAA,CAAOR,GAAW,EAAES,IAAS,KAAK;IACtC,MAAMH,GAAG,GAAG,MAAMC,KAAK,CAACP,GAAG,EAAE;MAC3BG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CK,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACF,IAAI;IAC3B,CAAC,CAAC;IAEF,OAAOH,GAAG;EACZ;AACF,CAAC;AAED,eAAeR,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}