{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\VS Code projects\\\\\\u0412\\u0435\\u0431-\\u043F\\u0440\\u043E\\u0433\\u0430\\\\hospitals-on-react\\\\client\\\\src\\\\pages\\\\Login\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { Button, ErrorMessage, Input, Page } from \"src/commonStyles\";\nimport { Container, Content, Form, Inner, Title } from \"./styled\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate, redirect } from \"react-router-dom\";\nimport { APP_ROUTES } from \"src/utils/constants\";\nimport AuthService from \"src/utils/api/services/Auth\";\nimport { useDispatch } from \"react-redux\";\nimport { setUser } from \"src/store/actions\";\nimport UsersService from \"src/utils/api/services/Users\";\nimport { getItem } from \"src/utils/local-storage\";\nimport jwt from \"jwt-decode\";\nimport store from \"src/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  var _errors$email, _errors$password, _errors$root;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    reset,\n    setError\n  } = useForm();\n  const onSubmit = async data => {\n    const {\n      email,\n      password\n    } = data;\n    try {\n      const user = await AuthService.login({\n        email,\n        password\n      });\n      dispatch(setUser(user));\n    } catch (err) {\n      setError(\"root\", {\n        type: \"400\",\n        message: err.message\n      });\n      return;\n    }\n    reset({\n      email: \"\",\n      password: \"\"\n    });\n    return navigate(APP_ROUTES.CATALOG);\n  };\n  const goToRegistr = () => navigate(APP_ROUTES.REGISTER);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"span\",\n          onClick: goToRegistr,\n          children: \"Registration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), \"/\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"span underline\",\n          children: \"Authorization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Inner, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            ...register(\"email\", {\n              required: {\n                value: true,\n                message: \"Enter email\"\n              },\n              pattern: {\n                value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\n                message: \"Формат: xxx@yyy.zzz\"\n              },\n              maxLength: {\n                value: 50,\n                message: \"Максимум 50 знаков\"\n              }\n            }),\n            placeholder: \"Email\",\n            $width: \"455px\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Inner, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            ...register(\"password\", {\n              required: {\n                value: true,\n                message: \"Enter password\"\n              },\n              pattern: {\n                value: /^[A-Za-z0-9]+$/,\n                message: \"Только латинские буквы и цифры\"\n              },\n              maxLength: {\n                value: 50,\n                message: \"Максимум 50 знаков\"\n              }\n            }),\n            placeholder: \"Password\",\n            $width: \"455px\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            $light: true,\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: (_errors$root = errors.root) === null || _errors$root === void 0 ? void 0 : _errors$root.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"9gFvnMMT8qfj5DELw7Sq27sLqE0=\", false, function () {\n  return [useNavigate, useDispatch, useForm];\n});\n_c = Login;\nexport const loginLoader = async () => {\n  const token = getItem(\"token\");\n  if (!token) return null;\n  const payload = jwt(token);\n  const user = await UsersService.getUser(+payload.sub);\n  if (!user.id) return null;\n  store.dispatch(setUser(user));\n  return redirect(APP_ROUTES.CATALOG);\n};\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Button","ErrorMessage","Input","Page","Container","Content","Form","Inner","Title","useForm","useNavigate","redirect","APP_ROUTES","AuthService","useDispatch","setUser","UsersService","getItem","jwt","store","jsxDEV","_jsxDEV","Login","_s","_errors$email","_errors$password","_errors$root","navigate","dispatch","register","formState","errors","handleSubmit","reset","setError","onSubmit","data","email","password","user","login","err","type","message","CATALOG","goToRegistr","REGISTER","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","required","value","pattern","maxLength","placeholder","$width","autoComplete","$light","root","_c","loginLoader","token","payload","getUser","sub","id","$RefreshReg$"],"sources":["D:/Programs/VS Code projects/Веб-прога/hospitals-on-react/client/src/pages/Login/index.tsx"],"sourcesContent":["import { Button, ErrorMessage, Input, Page } from \"src/commonStyles\";\r\nimport { Container, Content, Form, Inner, Title } from \"./styled\";\r\nimport { useForm, SubmitHandler } from \"react-hook-form\";\r\nimport { useNavigate, redirect } from \"react-router-dom\";\r\nimport { APP_ROUTES } from \"src/utils/constants\";\r\nimport AuthService from \"src/utils/api/services/Auth\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUser } from \"src/store/actions\";\r\nimport UsersService from \"src/utils/api/services/Users\";\r\nimport { JWTPayload } from \"src/utils/interfaces/jwt-payload.interface\";\r\nimport { getItem } from \"src/utils/local-storage\";\r\nimport jwt from \"jwt-decode\";\r\nimport store from \"src/store\";\r\n\r\ninterface IFormInput {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport default function Login() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n    setError,\r\n  } = useForm<IFormInput>();\r\n\r\n  const onSubmit: SubmitHandler<IFormInput> = async (data) => {\r\n    const { email, password } = data;\r\n\r\n    try {\r\n      const user = await AuthService.login({ email, password });\r\n      dispatch(setUser(user));\r\n    } catch (err: any) {\r\n      setError(\"root\", { type: \"400\", message: err.message });\r\n      return;\r\n    }\r\n\r\n    reset({\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n\r\n    return navigate(APP_ROUTES.CATALOG);\r\n  };\r\n\r\n  const goToRegistr = () => navigate(APP_ROUTES.REGISTER);\r\n\r\n  return (\r\n    <Page>\r\n      <Content>\r\n        <Title>\r\n          <span className=\"span\" onClick={goToRegistr}>\r\n            Registration\r\n          </span>\r\n          /<span className=\"span underline\">Authorization</span>\r\n        </Title>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Inner>\r\n            <Input\r\n              {...register(\"email\", {\r\n                required: { value: true, message: \"Enter email\" },\r\n                pattern: {\r\n                  value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\r\n                  message: \"Формат: xxx@yyy.zzz\",\r\n                },\r\n                maxLength: { value: 50, message: \"Максимум 50 знаков\" },\r\n              })}\r\n              placeholder=\"Email\"\r\n              $width=\"455px\"\r\n              autoComplete=\"off\"\r\n            />\r\n            <ErrorMessage>{errors.email?.message}</ErrorMessage>\r\n          </Inner>\r\n          <Inner>\r\n            <Input\r\n              {...register(\"password\", {\r\n                required: { value: true, message: \"Enter password\" },\r\n                pattern: {\r\n                  value: /^[A-Za-z0-9]+$/,\r\n                  message: \"Только латинские буквы и цифры\",\r\n                },\r\n                maxLength: { value: 50, message: \"Максимум 50 знаков\" },\r\n              })}\r\n              placeholder=\"Password\"\r\n              $width=\"455px\"\r\n              autoComplete=\"off\"\r\n            />\r\n            <ErrorMessage>{errors.password?.message}</ErrorMessage>\r\n          </Inner>\r\n          <Container>\r\n            <Button type=\"submit\" $light>\r\n              Sign in\r\n            </Button>\r\n          </Container>\r\n          <ErrorMessage>{errors.root?.message}</ErrorMessage>\r\n        </Form>\r\n      </Content>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport const loginLoader = async () => {\r\n  const token = getItem(\"token\");\r\n  if (!token) return null;\r\n\r\n  const payload: JWTPayload = jwt(token);\r\n  const user = await UsersService.getUser(+payload.sub);\r\n\r\n  if (!user.id) return null;\r\n\r\n  store.dispatch(setUser(user));\r\n  return redirect(APP_ROUTES.CATALOG);\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}