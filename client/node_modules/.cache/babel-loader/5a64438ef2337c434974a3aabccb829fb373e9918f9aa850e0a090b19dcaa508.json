{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\VS Code projects\\\\\\u0412\\u0435\\u0431-\\u043F\\u0440\\u043E\\u0433\\u0430\\\\project_marina\\\\client\\\\src\\\\pages\\\\Companies\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Container, Wrap } from \"./styled\";\nimport { Title } from \"src/commonStyles\";\n// import { Cards } from \"src/pages/Companies/CompanyCard/cards\";\nimport CompanyCard from \"src/pages/Companies/CompanyCard/CompanyCard\";\nimport { Link, redirect, useParams } from \"react-router-dom\";\nimport CatalogService from \"src/utils/api/services/Catalog\";\nimport { getItem } from \"src/utils/local-storage\";\nimport { APP_ROUTES } from \"src/utils/constants\";\nimport jwt from \"jwt-decode\";\nimport UsersService from \"src/utils/api/services/Users\";\nimport store from \"src/store\";\nimport { setActivatedCatalog, setCompanies, setUser } from \"src/store/actions\";\nimport CompaniesService from \"src/utils/api/services/Companies\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Companies() {\n  _s();\n  const {\n    name\n  } = useParams();\n  const companies = useSelector(store => store.companies.data);\n  const activatedCatalog = useSelector(store => store.catalog.activatedCatalog);\n  const cards = companies.map(card => /*#__PURE__*/_jsxDEV(Link, {\n    to: `${APP_ROUTES.CATALOG}/${name}/${card.id}`,\n    style: {\n      out\n    },\n    children: /*#__PURE__*/_jsxDEV(CompanyCard, {\n      imgUrl: card.imgUrl,\n      name: card.name,\n      reviewsScore: card.reviewsScore\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, card.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Wrap, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: activatedCatalog === null || activatedCatalog === void 0 ? void 0 : activatedCatalog.nameRu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), cards.length === 0 && /*#__PURE__*/_jsxDEV(Container, {\n      children: \"\\u041D\\u0435\\u0442 \\u043A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Companies, \"d7OmjpRidX3TVFS5BCQd4NOn0LU=\", false, function () {\n  return [useParams, useSelector, useSelector];\n});\n_c = Companies;\nexport const companiesLoader = async _ref => {\n  let {\n    params\n  } = _ref;\n  const token = getItem(\"token\");\n  if (!token) return redirect(APP_ROUTES.LOGIN);\n  const payload = jwt(token);\n  let [user, catalog] = await Promise.all([UsersService.getUser(+payload.sub), CatalogService.getCatalog({\n    name: params.name.split(\"-\").join(\" \")\n  })]);\n  if (!user.id) return null;\n  if (catalog.length === 0) return redirect(APP_ROUTES.CATALOG);\n  const companies = await CompaniesService.getCompanies({\n    catalogId: catalog[0].id\n  });\n  store.dispatch(setUser(user));\n  store.dispatch(setActivatedCatalog(catalog[0]));\n  store.dispatch(setCompanies(companies));\n  return user;\n};\nvar _c;\n$RefreshReg$(_c, \"Companies\");","map":{"version":3,"names":["React","Container","Wrap","Title","CompanyCard","Link","redirect","useParams","CatalogService","getItem","APP_ROUTES","jwt","UsersService","store","setActivatedCatalog","setCompanies","setUser","CompaniesService","useSelector","jsxDEV","_jsxDEV","Companies","_s","name","companies","data","activatedCatalog","catalog","cards","map","card","to","CATALOG","id","style","out","children","imgUrl","reviewsScore","fileName","_jsxFileName","lineNumber","columnNumber","nameRu","length","_c","companiesLoader","_ref","params","token","LOGIN","payload","user","Promise","all","getUser","sub","getCatalog","split","join","getCompanies","catalogId","dispatch","$RefreshReg$"],"sources":["D:/Programs/VS Code projects/Веб-прога/project_marina/client/src/pages/Companies/index.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Container, Wrap } from \"./styled\";\r\nimport { Title } from \"src/commonStyles\";\r\n// import { Cards } from \"src/pages/Companies/CompanyCard/cards\";\r\nimport CompanyCard from \"src/pages/Companies/CompanyCard/CompanyCard\";\r\nimport { Link, redirect, useParams } from \"react-router-dom\";\r\nimport CatalogService from \"src/utils/api/services/Catalog\";\r\nimport { getItem } from \"src/utils/local-storage\";\r\nimport { APP_ROUTES } from \"src/utils/constants\";\r\nimport { JWTPayload } from \"src/utils/interfaces/jwt-payload.interface\";\r\nimport jwt from \"jwt-decode\";\r\nimport UsersService from \"src/utils/api/services/Users\";\r\nimport store from \"src/store\";\r\nimport {\r\n  resetActivatedCatalog,\r\n  resetCompanies,\r\n  setActivatedCatalog,\r\n  setCompanies,\r\n  setUser,\r\n} from \"src/store/actions\";\r\nimport CompaniesService from \"src/utils/api/services/Companies\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IStore } from \"src/store/interfaces/store.interface\";\r\n\r\nexport default function Companies() {\r\n  const { name } = useParams();\r\n  const companies = useSelector((store: IStore) => store.companies.data);\r\n  const activatedCatalog = useSelector(\r\n    (store: IStore) => store.catalog.activatedCatalog\r\n  );\r\n\r\n  const cards = companies.map((card) => (\r\n    <Link to={`${APP_ROUTES.CATALOG}/${name}/${card.id}`} key={card.id} style={{out}}>\r\n      <CompanyCard\r\n        key={card.id}\r\n        imgUrl={card.imgUrl}\r\n        name={card.name}\r\n        reviewsScore={card.reviewsScore}\r\n      />\r\n    </Link>\r\n  ));\r\n\r\n  return (\r\n    <Wrap>\r\n      <Title>{activatedCatalog?.nameRu}</Title>\r\n      <Container>{cards}</Container>\r\n      {cards.length === 0 && <Container>Нет компаний</Container>}\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nexport const companiesLoader = async ({ params }: any) => {\r\n  const token = getItem(\"token\");\r\n  if (!token) return redirect(APP_ROUTES.LOGIN);\r\n\r\n  const payload: JWTPayload = jwt(token);\r\n  let [user, catalog] = await Promise.all([\r\n    UsersService.getUser(+payload.sub),\r\n    CatalogService.getCatalog({ name: params.name.split(\"-\").join(\" \") }),\r\n  ]);\r\n  if (!user.id) return null;\r\n\r\n  if (catalog.length === 0) return redirect(APP_ROUTES.CATALOG);\r\n  const companies = await CompaniesService.getCompanies({\r\n    catalogId: catalog[0].id,\r\n  });\r\n\r\n  store.dispatch(setUser(user));\r\n  store.dispatch(setActivatedCatalog(catalog[0]));\r\n  store.dispatch(setCompanies(companies));\r\n\r\n  return user;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}