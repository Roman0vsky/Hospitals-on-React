{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\VS Code projects\\\\\\u0412\\u0435\\u0431-\\u043F\\u0440\\u043E\\u0433\\u0430\\\\hospitals-on-react\\\\client\\\\src\\\\pages\\\\Register\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { Button, ErrorMessage, Input, Label, Page } from \"src/commonStyles\";\nimport { Box, Container, Content, Form, Inner, Title } from \"./styled\";\nimport { useForm } from \"react-hook-form\";\nimport { redirect, useNavigate } from \"react-router-dom\";\nimport { APP_ROUTES } from \"src/utils/constants\";\nimport AuthService from \"src/utils/api/services/Auth\";\nimport { useDispatch } from \"react-redux\";\nimport { setUser } from \"src/store/actions\";\nimport UsersService from \"src/utils/api/services/Users\";\nimport { getItem } from \"src/utils/local-storage\";\nimport jwt from \"jwt-decode\";\nimport store from \"src/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  var _errors$firstName, _errors$lastName, _errors$email, _errors$login, _errors$password, _errors$passwordConfi;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   (async function () {\n  //     const token = getItem(\"token\");\n  //     if (!token) return;\n\n  //     const payload: JWTPayload = jwt(token);\n  //     const user = await UsersService.getUser(+payload.sub);\n\n  //     if (!user.id) return;\n\n  //     dispatch(setUser(user));\n  //     navigate(APP_ROUTES.DASHBOARD, { replace: true });\n  //   })();\n  // }, [dispatch, navigate]);\n\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    reset,\n    setError\n  } = useForm();\n  const onSubmit = async data => {\n    const {\n      firstName,\n      lastName,\n      email,\n      login,\n      password,\n      passwordConfirm,\n      manager\n    } = data;\n    const roles = [\"user\"];\n    if (password !== passwordConfirm) {\n      setError(\"root\", {\n        type: \"password confirmation\",\n        message: \"Passwords don't match\"\n      });\n      return;\n    }\n    try {\n      const user = await AuthService.register({\n        email,\n        password,\n        login,\n        firstName,\n        lastName,\n        roles\n      });\n      dispatch(setUser(user));\n    } catch (err) {\n      setError(\"root\", {\n        type: \"400\",\n        message: err.message\n      });\n      return;\n    }\n    reset({\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      login: \"\",\n      password: \"\",\n      passwordConfirm: \"\",\n      manager: false\n    });\n    return navigate(APP_ROUTES.CATALOG, {\n      replace: true\n    });\n  };\n  const goToLogin = () => navigate(APP_ROUTES.LOGIN);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"span underline\",\n          children: \"Registration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), \"/\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"span\",\n          onClick: goToLogin,\n          children: \"Authorization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Inner, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            ...register(\"firstName\", {\n              required: {\n                value: true,\n                message: \"Введите имя\"\n              },\n              pattern: {\n                value: /^[A-Za-zА-Яа-я]+$/,\n                message: \"Только буквы\"\n              },\n              maxLength: {\n                value: 50,\n                message: \"Максимум 50 букв\"\n              }\n            }),\n            placeholder: \"\\u0418\\u043C\\u044F\",\n            $width: \"350px\",\n            autoComplete: \"off\",\n            id: \"firstName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            children: (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Inner, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            ...register(\"lastName\", {\n              required: {\n                value: true,\n                message: \"Введите фамилию\"\n              },\n              pattern: {\n                value: /^[A-Za-zА-Яа-я]+$/,\n                message: \"Только буквы\"\n              },\n              maxLength: {\n                value: 50,\n                message: \"Максимум 50 букв\"\n              }\n            }),\n            placeholder: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",\n            $width: \"350px\",\n            autoComplete: \"off\",\n            id: \"lastName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            children: (_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"email\",\n            children: \"\\u041F\\u043E\\u0447\\u0442\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Inner, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              ...register(\"email\", {\n                required: {\n                  value: true,\n                  message: \"Введите почту\"\n                },\n                pattern: {\n                  value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\n                  message: \"Формат: xxx@yyy.zzz\"\n                }\n              }),\n              placeholder: \"\\u041F\\u043E\\u0447\\u0442\\u0430\",\n              $width: \"350px\",\n              autoComplete: \"off\",\n              id: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"login\",\n            children: \"\\u041B\\u043E\\u0433\\u0438\\u043D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Inner, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              ...register(\"login\", {\n                required: {\n                  value: true,\n                  message: \"Введите логин\"\n                },\n                pattern: {\n                  value: /^[A-Za-z0-9]+$/,\n                  message: \"Только латинские буквы и цифры\"\n                },\n                maxLength: {\n                  value: 50,\n                  message: \"Максимум 50 знаков\"\n                }\n              }),\n              placeholder: \"\\u041B\\u043E\\u0433\\u0438\\u043D\",\n              $width: \"350px\",\n              autoComplete: \"off\",\n              id: \"login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              children: (_errors$login = errors.login) === null || _errors$login === void 0 ? void 0 : _errors$login.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"password\",\n            children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Inner, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              ...register(\"password\", {\n                required: {\n                  value: true,\n                  message: \"Введите пароль\"\n                },\n                pattern: {\n                  value: /^[A-Za-z0-9]+$/,\n                  message: \"Только латинские буквы и цифры\"\n                },\n                maxLength: {\n                  value: 50,\n                  message: \"Максимум 50 знаков\"\n                }\n              }),\n              placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n              $width: \"350px\",\n              autoComplete: \"off\",\n              id: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"passwordConfirm\",\n            children: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Inner, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              ...register(\"passwordConfirm\", {\n                required: {\n                  value: true,\n                  message: \"Подтвердите пароль\"\n                }\n              }),\n              placeholder: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n              $width: \"350px\",\n              autoComplete: \"off\",\n              id: \"passwordConfirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              children: (_errors$passwordConfi = errors.passwordConfirm) === null || _errors$passwordConfi === void 0 ? void 0 : _errors$passwordConfi.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          $width: \"430px\",\n          $checkbox: true,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"manager\",\n            $checkbox: true,\n            children: \"Are you a manager?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            ...register(\"manager\"),\n            $width: \"35px\",\n            $height: \"35px\",\n            autoComplete: \"off\",\n            id: \"manager\",\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            $light: true,\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"9gFvnMMT8qfj5DELw7Sq27sLqE0=\", false, function () {\n  return [useNavigate, useDispatch, useForm];\n});\n_c = Register;\nexport const registerLoader = async () => {\n  const token = getItem(\"token\");\n  if (!token) return null;\n  const payload = jwt(token);\n  const user = await UsersService.getUser(+payload.sub);\n  if (!user.id) return null;\n  store.dispatch(setUser(user));\n  return redirect(APP_ROUTES.CATALOG);\n};\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["Button","ErrorMessage","Input","Label","Page","Box","Container","Content","Form","Inner","Title","useForm","redirect","useNavigate","APP_ROUTES","AuthService","useDispatch","setUser","UsersService","getItem","jwt","store","jsxDEV","_jsxDEV","Register","_s","_errors$firstName","_errors$lastName","_errors$email","_errors$login","_errors$password","_errors$passwordConfi","navigate","dispatch","register","formState","errors","handleSubmit","reset","setError","onSubmit","data","firstName","lastName","email","login","password","passwordConfirm","manager","roles","type","message","user","err","CATALOG","replace","goToLogin","LOGIN","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","required","value","pattern","maxLength","placeholder","$width","autoComplete","id","htmlFor","$checkbox","$height","$light","_c","registerLoader","token","payload","getUser","sub","$RefreshReg$"],"sources":["D:/Programs/VS Code projects/Веб-прога/hospitals-on-react/client/src/pages/Register/index.tsx"],"sourcesContent":["import {\r\n  Button,\r\n  ErrorMessage,\r\n  Input,\r\n  Label,\r\n  Page,\r\n  Wrapper,\r\n} from \"src/commonStyles\";\r\nimport { Box, Container, Content, Form, Inner, Title } from \"./styled\";\r\nimport { useForm, SubmitHandler } from \"react-hook-form\";\r\nimport { Navigate, redirect, useNavigate } from \"react-router-dom\";\r\nimport { APP_ROUTES } from \"src/utils/constants\";\r\nimport AuthService from \"src/utils/api/services/Auth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUser } from \"src/store/actions\";\r\nimport { IStore } from \"src/store/interfaces/store.interface\";\r\nimport { useEffect } from \"react\";\r\nimport UsersService from \"src/utils/api/services/Users\";\r\nimport { JWTPayload } from \"src/utils/interfaces/jwt-payload.interface\";\r\nimport { getItem } from \"src/utils/local-storage\";\r\nimport jwt from \"jwt-decode\";\r\nimport store from \"src/store\";\r\n\r\ninterface IFormInput {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  login: string;\r\n  password: string;\r\n  passwordConfirm: string;\r\n  manager: boolean;\r\n}\r\n\r\nexport default function Register() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  // useEffect(() => {\r\n  //   (async function () {\r\n  //     const token = getItem(\"token\");\r\n  //     if (!token) return;\r\n\r\n  //     const payload: JWTPayload = jwt(token);\r\n  //     const user = await UsersService.getUser(+payload.sub);\r\n\r\n  //     if (!user.id) return;\r\n\r\n  //     dispatch(setUser(user));\r\n  //     navigate(APP_ROUTES.DASHBOARD, { replace: true });\r\n  //   })();\r\n  // }, [dispatch, navigate]);\r\n\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n    setError,\r\n  } = useForm<IFormInput>();\r\n\r\n  const onSubmit: SubmitHandler<IFormInput> = async (data) => {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      login,\r\n      password,\r\n      passwordConfirm,\r\n      manager,\r\n    } = data;\r\n    const roles = [\"user\"];\r\n\r\n    if (password !== passwordConfirm) {\r\n      setError(\"root\", {\r\n        type: \"password confirmation\",\r\n        message: \"Passwords don't match\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const user = await AuthService.register({\r\n        email,\r\n        password,\r\n        login,\r\n        firstName,\r\n        lastName,\r\n        roles,\r\n      });\r\n      dispatch(setUser(user));\r\n    } catch (err: any) {\r\n      setError(\"root\", { type: \"400\", message: err.message });\r\n      return;\r\n    }\r\n\r\n    reset({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      login: \"\",\r\n      password: \"\",\r\n      passwordConfirm: \"\",\r\n      manager: false,\r\n    });\r\n\r\n    return navigate(APP_ROUTES.CATALOG, { replace: true });\r\n  };\r\n\r\n  const goToLogin = () => navigate(APP_ROUTES.LOGIN);\r\n\r\n  return (\r\n    <Page>\r\n      <Content>\r\n        <Title>\r\n          <span className=\"span underline\">Registration</span>/\r\n          <span className=\"span\" onClick={goToLogin}>\r\n            Authorization\r\n          </span>\r\n        </Title>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Inner>\r\n              <Input\r\n                {...register(\"firstName\", {\r\n                  required: { value: true, message: \"Введите имя\" },\r\n                  pattern: {\r\n                    value: /^[A-Za-zА-Яа-я]+$/,\r\n                    message: \"Только буквы\",\r\n                  },\r\n                  maxLength: { value: 50, message: \"Максимум 50 букв\" },\r\n                })}\r\n                placeholder=\"Имя\"\r\n                $width=\"350px\"\r\n                autoComplete=\"off\"\r\n                id=\"firstName\"\r\n              />\r\n              <ErrorMessage>{errors.firstName?.message}</ErrorMessage>\r\n            </Inner>\r\n            <Inner>\r\n              <Input\r\n                {...register(\"lastName\", {\r\n                  required: { value: true, message: \"Введите фамилию\" },\r\n                  pattern: {\r\n                    value: /^[A-Za-zА-Яа-я]+$/,\r\n                    message: \"Только буквы\",\r\n                  },\r\n                  maxLength: { value: 50, message: \"Максимум 50 букв\" },\r\n                })}\r\n                placeholder=\"Фамилия\"\r\n                $width=\"350px\"\r\n                autoComplete=\"off\"\r\n                id=\"lastName\"\r\n              />\r\n              <ErrorMessage>{errors.lastName?.message}</ErrorMessage>\r\n            </Inner>\r\n          <Box>\r\n            <Label htmlFor=\"email\">Почта</Label>\r\n            <Inner>\r\n              <Input\r\n                {...register(\"email\", {\r\n                  required: { value: true, message: \"Введите почту\" },\r\n                  pattern: {\r\n                    value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\r\n                    message: \"Формат: xxx@yyy.zzz\",\r\n                  },\r\n                })}\r\n                placeholder=\"Почта\"\r\n                $width=\"350px\"\r\n                autoComplete=\"off\"\r\n                id=\"email\"\r\n              />\r\n              <ErrorMessage>{errors.email?.message}</ErrorMessage>\r\n            </Inner>\r\n          </Box>\r\n          <Box>\r\n            <Label htmlFor=\"login\">Логин</Label>\r\n            <Inner>\r\n              <Input\r\n                {...register(\"login\", {\r\n                  required: { value: true, message: \"Введите логин\" },\r\n                  pattern: {\r\n                    value: /^[A-Za-z0-9]+$/,\r\n                    message: \"Только латинские буквы и цифры\",\r\n                  },\r\n                  maxLength: { value: 50, message: \"Максимум 50 знаков\" },\r\n                })}\r\n                placeholder=\"Логин\"\r\n                $width=\"350px\"\r\n                autoComplete=\"off\"\r\n                id=\"login\"\r\n              />\r\n              <ErrorMessage>{errors.login?.message}</ErrorMessage>\r\n            </Inner>\r\n          </Box>\r\n          <Box>\r\n            <Label htmlFor=\"password\">Пароль</Label>\r\n            <Inner>\r\n              <Input\r\n                {...register(\"password\", {\r\n                  required: { value: true, message: \"Введите пароль\" },\r\n                  pattern: {\r\n                    value: /^[A-Za-z0-9]+$/,\r\n                    message: \"Только латинские буквы и цифры\",\r\n                  },\r\n                  maxLength: { value: 50, message: \"Максимум 50 знаков\" },\r\n                })}\r\n                placeholder=\"Пароль\"\r\n                $width=\"350px\"\r\n                autoComplete=\"off\"\r\n                id=\"password\"\r\n              />\r\n              <ErrorMessage>{errors.password?.message}</ErrorMessage>\r\n            </Inner>\r\n          </Box>\r\n          <Box>\r\n            <Label htmlFor=\"passwordConfirm\">Подтвердите пароль</Label>\r\n            <Inner>\r\n              <Input\r\n                {...register(\"passwordConfirm\", {\r\n                  required: { value: true, message: \"Подтвердите пароль\" },\r\n                })}\r\n                placeholder=\"Подтвердите пароль\"\r\n                $width=\"350px\"\r\n                autoComplete=\"off\"\r\n                id=\"passwordConfirm\"\r\n              />\r\n              <ErrorMessage>{errors.passwordConfirm?.message}</ErrorMessage>\r\n            </Inner>\r\n          </Box>\r\n          <Box $width=\"430px\" $checkbox>\r\n            <Label htmlFor=\"manager\" $checkbox>\r\n              Are you a manager?\r\n            </Label>\r\n            <Input\r\n              {...register(\"manager\")}\r\n              $width=\"35px\"\r\n              $height=\"35px\"\r\n              autoComplete=\"off\"\r\n              id=\"manager\"\r\n              type=\"checkbox\"\r\n            />\r\n          </Box>\r\n          <Container>\r\n            <Button type=\"submit\" $light>\r\n              Sign up\r\n            </Button>\r\n          </Container>\r\n        </Form>\r\n      </Content>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport const registerLoader = async () => {\r\n  const token = getItem(\"token\");\r\n  if (!token) return null;\r\n\r\n  const payload: JWTPayload = jwt(token);\r\n  const user = await UsersService.getUser(+payload.sub);\r\n\r\n  if (!user.id) return null;\r\n\r\n  store.dispatch(setUser(user));\r\n  return redirect(APP_ROUTES.CATALOG);\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}