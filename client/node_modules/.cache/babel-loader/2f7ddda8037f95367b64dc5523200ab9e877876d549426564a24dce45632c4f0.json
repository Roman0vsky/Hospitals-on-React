{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\VS Code projects\\\\\\u0412\\u0435\\u0431-\\u043F\\u0440\\u043E\\u0433\\u0430\\\\hospitals-on-react\\\\client\\\\src\\\\pages\\\\Doctor\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { Container, InfoContainer, Wrap } from \"./styled\";\nimport { Title, AvatarImg, Text } from \"src/commonStyles\";\nimport { redirect } from \"react-router-dom\";\nimport { getItem } from \"src/utils/local-storage\";\nimport { APP_ROUTES } from \"src/utils/constants\";\nimport UsersService from \"src/utils/api/services/Users\";\nimport jwt from \"jwt-decode\";\nimport store from \"src/store\";\nimport { setActivatedCompany, setUser } from \"src/store/actions\";\nimport CompaniesService from \"src/utils/api/services/Companies\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Doctor() {\n  _s();\n  const user = useSelector(store => store.auth.user);\n  const doctor = useSelector(store => store.doctors.activatedDoctor);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm();\n  const onSubmit = data => {\n    setReviews(prevState => {\n      if (!user) return prevState;\n      const newState = [...prevState];\n      newState.push({\n        id: prevState[prevState.length - 1].id + 1,\n        text: `${data.review}`,\n        user: {\n          id: user.id,\n          name: user.firstName + \" \" + user.lastName,\n          imgUrl: \"https://images.unsplash.com/photo-1633332755192-727a05c4013d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8dXNlcnxlbnwwfHwwfHx8MA%3D%3D&w=1000&q=80\"\n        }\n      });\n      reset({\n        review: \"\"\n      });\n      return newState;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Wrap, {\n    children: [/*#__PURE__*/_jsxDEV(InfoContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Doctor information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AvatarImg, {\n        $backgroundImg: (doctor === null || doctor === void 0 ? void 0 : doctor.imgUrl) || \"https://nordin.by/wp-content/uploads/2022/12/doctor-full.jpg\",\n        $margin_bottom: \"20px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: doctor === null || doctor === void 0 ? void 0 : doctor.fullName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: doctor === null || doctor === void 0 ? void 0 : doctor.specialization\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: doctor === null || doctor === void 0 ? void 0 : doctor.workTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(Doctor, \"TzKuddQVPGBdUsx3ZCQ1hhWAdxU=\", false, function () {\n  return [useSelector, useSelector, useForm];\n});\n_c = Doctor;\nconst ReviewsScoreContainer = styled.div`\n  display: flex;\n  column-gap: 0.5rem;\n  align-items: center;\n  justify-content: center;\n  margin: 1.5rem 0;\n`;\nexport const doctorLoader = async _ref => {\n  let {\n    params\n  } = _ref;\n  const token = getItem(\"token\");\n  if (!token) return redirect(APP_ROUTES.LOGIN);\n  const payload = jwt(token);\n  let [user, company] = await Promise.all([UsersService.getUser(+payload.sub), CompaniesService.getCompany({\n    id: params.id\n  })]);\n  if (!user.id) return null;\n  store.dispatch(setUser(user));\n  store.dispatch(setActivatedCompany(company));\n  return user;\n};\nvar _c;\n$RefreshReg$(_c, \"Doctor\");","map":{"version":3,"names":["Container","InfoContainer","Wrap","Title","AvatarImg","Text","redirect","getItem","APP_ROUTES","UsersService","jwt","store","setActivatedCompany","setUser","CompaniesService","useSelector","styled","useForm","jsxDEV","_jsxDEV","Doctor","_s","user","auth","doctor","doctors","activatedDoctor","register","handleSubmit","formState","errors","reset","onSubmit","data","setReviews","prevState","newState","push","id","length","text","review","name","firstName","lastName","imgUrl","children","fileName","_jsxFileName","lineNumber","columnNumber","$backgroundImg","$margin_bottom","fullName","specialization","workTime","_c","ReviewsScoreContainer","div","doctorLoader","_ref","params","token","LOGIN","payload","company","Promise","all","getUser","sub","getCompany","dispatch","$RefreshReg$"],"sources":["D:/Programs/VS Code projects/Веб-прога/hospitals-on-react/client/src/pages/Doctor/index.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Img,\r\n  InfoContainer,\r\n  Reviews,\r\n  TextArea,\r\n  TextAreaBox,\r\n  Wrap,\r\n} from \"./styled\";\r\nimport { Wrap as Wrapp } from \"../Reviews/Review/styled\";\r\nimport Review from \"../Reviews/Review/Review\";\r\nimport {\r\n  Button,\r\n  Title,\r\n  StarsContainer,\r\n  StarWrapper,\r\n  ContentContainer,\r\n  ErrorMessage,\r\n  AvatarImg,\r\n  Text,\r\n} from \"src/commonStyles\";\r\nimport { redirect } from \"react-router-dom\";\r\nimport { getItem } from \"src/utils/local-storage\";\r\nimport { APP_ROUTES } from \"src/utils/constants\";\r\nimport UsersService from \"src/utils/api/services/Users\";\r\nimport { JWTPayload } from \"src/utils/interfaces/jwt-payload.interface\";\r\nimport jwt from \"jwt-decode\";\r\nimport store from \"src/store\";\r\nimport { setActivatedCompany, setUser } from \"src/store/actions\";\r\nimport CompaniesService from \"src/utils/api/services/Companies\";\r\nimport { IStore } from \"src/store/interfaces/store.interface\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { IReview } from \"src/utils/interfaces/review.interface\";\r\nimport { SubmitHandler, useForm } from \"react-hook-form\";\r\n\r\n\r\n\r\nexport default function Doctor() {\r\n  const user = useSelector((store: IStore) => store.auth.user);\r\n  const doctor = useSelector((store: IStore) => store.doctors.activatedDoctor);\r\n\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm<IFormInput>();\r\n\r\n  const onSubmit: SubmitHandler<IFormInput> = (data) => {\r\n    setReviews((prevState) => {\r\n      if (!user) return prevState;\r\n\r\n      const newState = [...prevState];\r\n      newState.push({\r\n        id: prevState[prevState.length - 1].id + 1,\r\n        text: `${data.review}`,\r\n        user: {\r\n          id: user.id,\r\n          name: user.firstName + \" \" + user.lastName,\r\n          imgUrl:\r\n            \"https://images.unsplash.com/photo-1633332755192-727a05c4013d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8dXNlcnxlbnwwfHwwfHx8MA%3D%3D&w=1000&q=80\",\r\n        },\r\n      });\r\n      reset({ review: \"\" });\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrap>\r\n      <InfoContainer>\r\n        <Title>Doctor information</Title>\r\n        <AvatarImg\r\n          $backgroundImg={\r\n            doctor?.imgUrl ||\r\n            \"https://nordin.by/wp-content/uploads/2022/12/doctor-full.jpg\"\r\n          }\r\n          $margin_bottom=\"20px\"\r\n        />\r\n        <Text>{doctor?.fullName}</Text>\r\n        <Text>{doctor?.specialization}</Text>\r\n        <Text>{doctor?.workTime}</Text>\r\n      </InfoContainer>\r\n      <Container>\r\n\r\n      {/* <WcDatepicker></WcDatepicker> */}\r\n        \r\n      </Container>\r\n\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nconst ReviewsScoreContainer = styled.div`\r\n  display: flex;\r\n  column-gap: 0.5rem;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 1.5rem 0;\r\n`;\r\n\r\nexport const doctorLoader = async ({ params }: any) => {\r\n  const token = getItem(\"token\");\r\n  if (!token) return redirect(APP_ROUTES.LOGIN);\r\n\r\n  const payload: JWTPayload = jwt(token);\r\n  let [user, company] = await Promise.all([\r\n    UsersService.getUser(+payload.sub),\r\n    CompaniesService.getCompany({ id: params.id }),\r\n  ]);\r\n  if (!user.id) return null;\r\n\r\n  store.dispatch(setUser(user));\r\n  store.dispatch(setActivatedCompany(company));\r\n\r\n  return user;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}