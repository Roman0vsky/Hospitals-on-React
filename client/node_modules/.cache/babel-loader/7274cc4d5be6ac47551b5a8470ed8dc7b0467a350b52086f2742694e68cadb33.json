{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\VS Code projects\\\\\\u0412\\u0435\\u0431-\\u043F\\u0440\\u043E\\u0433\\u0430\\\\hospitals-on-react\\\\client\\\\src\\\\pages\\\\Doctor\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Container, InfoContainer, Wrap } from \"./styled\";\nimport Review from \"../Companies/Review/Review\";\nimport { Title, AvatarImg, Text } from \"src/commonStyles\";\nimport { redirect } from \"react-router-dom\";\nimport { getItem } from \"src/utils/local-storage\";\nimport { APP_ROUTES } from \"src/utils/constants\";\nimport UsersService from \"src/utils/api/services/Users\";\nimport jwt from \"jwt-decode\";\nimport store from \"src/store\";\nimport { setActivatedCompany, setUser } from \"src/store/actions\";\nimport CompaniesService from \"src/utils/api/services/Companies\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewsList = [{\n  id: 1,\n  text: \"Все понравилось. И персонал, и месторождение, и печеньки с кофе, и чистота в помещениях. Молодцы. Уходить не хотелось\",\n  user: {\n    id: -1,\n    name: \"Анна Коляго\",\n    imgUrl: \"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NXx8dXNlcnxlbnwwfHwwfHx8MA%3D%3D&w=1000&q=80\"\n  }\n}, {\n  id: 2,\n  text: \"Персонал хамло!\",\n  user: {\n    id: -1,\n    name: \"Наталья Хамлова\",\n    imgUrl: \"https://oir.mobi/uploads/posts/2020-01/1579144434_1-1.jpg\"\n  }\n}, {\n  id: 3,\n  text: \"Очень крутая компания! Поддержка суперская, молниеносная, спасибо большое ребятам за такой сервис и высшую культуру обслуживания клиентов! Так держать! Всем советуем)\",\n  user: {\n    id: 1,\n    name: \"Top Gangster\",\n    imgUrl: \"https://eduenglishpassport.sru.ac.th/assets/images/users/1.jpg\"\n  }\n}];\nexport default function Doctor() {\n  _s();\n  const user = useSelector(store => store.auth.user);\n  const doctor = useSelector(store => store.doctors.activatedDoctor);\n  const [reviews, setReviews] = useState(ReviewsList);\n  const reviewsItems = reviews.map(review => /*#__PURE__*/_jsxDEV(Review, {\n    data: review\n  }, review.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this));\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm();\n  const onSubmit = data => {\n    setReviews(prevState => {\n      if (!user) return prevState;\n      const newState = [...prevState];\n      newState.push({\n        id: prevState[prevState.length - 1].id + 1,\n        text: `${data.review}`,\n        user: {\n          id: user.id,\n          name: user.firstName + \" \" + user.lastName,\n          imgUrl: \"https://images.unsplash.com/photo-1633332755192-727a05c4013d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8dXNlcnxlbnwwfHwwfHx8MA%3D%3D&w=1000&q=80\"\n        }\n      });\n      reset({\n        review: \"\"\n      });\n      return newState;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Wrap, {\n    children: [/*#__PURE__*/_jsxDEV(InfoContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Doctor information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AvatarImg, {\n        $backgroundImg: (doctor === null || doctor === void 0 ? void 0 : doctor.imgUrl) || \"https://nordin.by/wp-content/uploads/2022/12/doctor-full.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: doctor === null || doctor === void 0 ? void 0 : doctor.fullName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: doctor === null || doctor === void 0 ? void 0 : doctor.workTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(Doctor, \"+QgehFI9Ps1gBj6dpvgS7gt7whE=\", false, function () {\n  return [useSelector, useSelector, useForm];\n});\n_c = Doctor;\nconst ReviewsScoreContainer = styled.div`\n  display: flex;\n  column-gap: 0.5rem;\n  align-items: center;\n  justify-content: center;\n  margin: 1.5rem 0;\n`;\nexport const doctorLoader = async _ref => {\n  let {\n    params\n  } = _ref;\n  const token = getItem(\"token\");\n  if (!token) return redirect(APP_ROUTES.LOGIN);\n  const payload = jwt(token);\n  let [user, company] = await Promise.all([UsersService.getUser(+payload.sub), CompaniesService.getCompany({\n    id: params.id\n  })]);\n  if (!user.id) return null;\n  store.dispatch(setUser(user));\n  store.dispatch(setActivatedCompany(company));\n  return user;\n};\nvar _c;\n$RefreshReg$(_c, \"Doctor\");","map":{"version":3,"names":["useState","Container","InfoContainer","Wrap","Review","Title","AvatarImg","Text","redirect","getItem","APP_ROUTES","UsersService","jwt","store","setActivatedCompany","setUser","CompaniesService","useSelector","styled","useForm","jsxDEV","_jsxDEV","ReviewsList","id","text","user","name","imgUrl","Doctor","_s","auth","doctor","doctors","activatedDoctor","reviews","setReviews","reviewsItems","map","review","data","fileName","_jsxFileName","lineNumber","columnNumber","register","handleSubmit","formState","errors","reset","onSubmit","prevState","newState","push","length","firstName","lastName","children","$backgroundImg","fullName","workTime","_c","ReviewsScoreContainer","div","doctorLoader","_ref","params","token","LOGIN","payload","company","Promise","all","getUser","sub","getCompany","dispatch","$RefreshReg$"],"sources":["D:/Programs/VS Code projects/Веб-прога/hospitals-on-react/client/src/pages/Doctor/index.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Img,\r\n  InfoContainer,\r\n  Reviews,\r\n  TextArea,\r\n  TextAreaBox,\r\n  Wrap,\r\n} from \"./styled\";\r\nimport { Wrap as Wrapp } from \"../Companies/Review/styled\";\r\nimport Review from \"../Companies/Review/Review\";\r\nimport {\r\n  Button,\r\n  Title,\r\n  StarsContainer,\r\n  StarWrapper,\r\n  ContentContainer,\r\n  ErrorMessage,\r\n  AvatarImg,\r\n  Text,\r\n} from \"src/commonStyles\";\r\nimport { redirect } from \"react-router-dom\";\r\nimport { getItem } from \"src/utils/local-storage\";\r\nimport { APP_ROUTES } from \"src/utils/constants\";\r\nimport UsersService from \"src/utils/api/services/Users\";\r\nimport { JWTPayload } from \"src/utils/interfaces/jwt-payload.interface\";\r\nimport jwt from \"jwt-decode\";\r\nimport store from \"src/store\";\r\nimport { setActivatedCompany, setUser } from \"src/store/actions\";\r\nimport CompaniesService from \"src/utils/api/services/Companies\";\r\nimport { IStore } from \"src/store/interfaces/store.interface\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { IReview } from \"src/utils/interfaces/review.interface\";\r\nimport { SubmitHandler, useForm } from \"react-hook-form\";\r\n\r\ninterface IFormInput {\r\n  review: string;\r\n}\r\n\r\nconst ReviewsList: IReview[] = [\r\n  {\r\n    id: 1,\r\n    text: \"Все понравилось. И персонал, и месторождение, и печеньки с кофе, и чистота в помещениях. Молодцы. Уходить не хотелось\",\r\n    user: {\r\n      id: -1,\r\n      name: \"Анна Коляго\",\r\n      imgUrl:\r\n        \"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NXx8dXNlcnxlbnwwfHwwfHx8MA%3D%3D&w=1000&q=80\",\r\n    },\r\n  },\r\n  {\r\n    id: 2,\r\n    text: \"Персонал хамло!\",\r\n    user: {\r\n      id: -1,\r\n      name: \"Наталья Хамлова\",\r\n      imgUrl: \"https://oir.mobi/uploads/posts/2020-01/1579144434_1-1.jpg\",\r\n    },\r\n  },\r\n  {\r\n    id: 3,\r\n    text: \"Очень крутая компания! Поддержка суперская, молниеносная, спасибо большое ребятам за такой сервис и высшую культуру обслуживания клиентов! Так держать! Всем советуем)\",\r\n    user: {\r\n      id: 1,\r\n      name: \"Top Gangster\",\r\n      imgUrl: \"https://eduenglishpassport.sru.ac.th/assets/images/users/1.jpg\",\r\n    },\r\n  },\r\n];\r\n\r\nexport default function Doctor() {\r\n  const user = useSelector((store: IStore) => store.auth.user);\r\n  const doctor = useSelector((store: IStore) => store.doctors.activatedDoctor);\r\n  const [reviews, setReviews] = useState<IReview[]>(ReviewsList);\r\n\r\n  const reviewsItems = reviews.map((review) => (\r\n    <Review key={review.id} data={review} />\r\n  ));\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm<IFormInput>();\r\n\r\n  const onSubmit: SubmitHandler<IFormInput> = (data) => {\r\n    setReviews((prevState) => {\r\n      if (!user) return prevState;\r\n\r\n      const newState = [...prevState];\r\n      newState.push({\r\n        id: prevState[prevState.length - 1].id + 1,\r\n        text: `${data.review}`,\r\n        user: {\r\n          id: user.id,\r\n          name: user.firstName + \" \" + user.lastName,\r\n          imgUrl:\r\n            \"https://images.unsplash.com/photo-1633332755192-727a05c4013d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8dXNlcnxlbnwwfHwwfHx8MA%3D%3D&w=1000&q=80\",\r\n        },\r\n      });\r\n      reset({ review: \"\" });\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrap>\r\n      <InfoContainer>\r\n        <Title>Doctor information</Title>\r\n        <AvatarImg\r\n          $backgroundImg={\r\n            doctor?.imgUrl ||\r\n            \"https://nordin.by/wp-content/uploads/2022/12/doctor-full.jpg\"\r\n          }\r\n        />\r\n        <Text>{doctor?.fullName}</Text>\r\n        <Text>{doctor?.workTime}</Text>\r\n      </InfoContainer>\r\n      <Container></Container>\r\n\r\n      {/* <Reviews>Отзывы</Reviews>\r\n        <Container>\r\n          {reviewsItems}\r\n          <Wrapp>\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n              <TextAreaBox>\r\n                <TextArea\r\n                  {...register(\"review\", {\r\n                    required: { value: true, message: \"Заполните поле\" },\r\n                  })}\r\n                  placeholder=\"Enter комментарий\"\r\n                />\r\n                <ErrorMessage>{errors.review?.message}</ErrorMessage>\r\n              </TextAreaBox>\r\n              <Button type=\"submit\">Отправить</Button>\r\n            </Form>\r\n          </Wrapp>\r\n        </Container> */}\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nconst ReviewsScoreContainer = styled.div`\r\n  display: flex;\r\n  column-gap: 0.5rem;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 1.5rem 0;\r\n`;\r\n\r\nexport const doctorLoader = async ({ params }: any) => {\r\n  const token = getItem(\"token\");\r\n  if (!token) return redirect(APP_ROUTES.LOGIN);\r\n\r\n  const payload: JWTPayload = jwt(token);\r\n  let [user, company] = await Promise.all([\r\n    UsersService.getUser(+payload.sub),\r\n    CompaniesService.getCompany({ id: params.id }),\r\n  ]);\r\n  if (!user.id) return null;\r\n\r\n  store.dispatch(setUser(user));\r\n  store.dispatch(setActivatedCompany(company));\r\n\r\n  return user;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}